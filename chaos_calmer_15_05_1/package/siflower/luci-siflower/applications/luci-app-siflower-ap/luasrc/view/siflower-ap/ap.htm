<%+header%>
<fieldset class="apSet">
    <legend><%:AP SET%></legend>
    <div class="dualSwitch">
    <div class="dualSwitchCon">
        <span class="spanSwitchOn" style="font-size: 1.4em;"><%:frequence intergration%></span>
        <div id="switchDualCon" class="switchCon" onclick="switchDualChange()">
            <i class="switchBg"></i>
            <i id="switchDualOn" class="switchBall" style=""></i>
            <i id="switchDualOff" class="switchBallOff" style="display: none;"></i>
        </div>
		<span id="switchDualSpan" class="bWlSwitchOff"><%:enabled%></span>
    </div>
    </div>
    <ul><li class="border-line"></li></ul>
    <div id="Error">
        <div id="hsErr" class="hsTip">
            <i class="altIcon"></i>
            <span class="detail"><%:operated%></span>
            <input class="subBtn" value="<%:confirm%>" type="button" onclick="closeTip()">
        </div>
    </div>
	<div id="waiting" style="display: none;">
        <div class="LoadConCover">
            <div class="coverLoadCon">
                <div class="coverLoad">
                    <i class="coverLoadClose" onclick="coverClose()"></i>
                    <i class="coverLoading"></i>
                    <p class="coverLoadNote"><%:Setting up，please wait a moment...%></p>
                </div>
            </div>
        </div>
    </div>
    <div id="import-config-div" class="hsVignetteTipCon" style="display: none;">
        <div class="hsVigApImportConfig">
            <p class="hsVigTtop"><i class="hsVigClose" onclick="hideParts(['import-config-div'])"></i></p>
            <div class="file-box">
                <p><%:LoadConfig intro%></p>
                <input type="text" id="textld" class="txt" />
                <input type="button" class="btn" value="<%:Scan%>" />
                <input type="file" name="file" class="file" id="fileld" onchange="document.getElementById('textld').value=this.files[0].name"/>
                <input type="button" class="btn" value="<%:LoadConfig%>" onclick="importConfig()" />
                <button onclick="hideParts(['import-config-div'])"><%:cancel%></button>
            </div>
        </div>
    </div>
    <div id="groups-info">
        <table>
            <tr><td colspan="5"><%:Group List%></td></tr>
            <tr><td colspan="5">
                <button onclick="newGroup()"><%:add new%></button>
                <button id ='groupDel' disabled onclick="delGroup()"><%:delete%></button>
                <button onclick="getApGroups()"><%:refresh%></button>
                <button onclick="showParts(['import-config-div'])"><%:import config%></button>
                <button onclick="location.href='<%=controller%>/admin/ap/export_ap_group_config'"><%:export config%></button>
            </td></tr>
        </table>
        <table id="ap-groups">
        </table>
    </div>
    <div id="new-group" class="hsVignetteCon" style="display: none;">
        <div class="hsVigApGroup">
            <p class="hsVigTtop"><i class="hsVigClose" onclick="closeNewGroup()"></i></p>
            <table id="new-group-table" class="tb-no-border">
                <tr><td class="wan-td-left"><%:Group Name%></td><td class="wan-td-right"><input id="group-name" maxlength="32" onkeyup="numLetterLimit(this)"></td></tr>
                <tr class="border-line dualHide"><td class="wan-td-left"></td><td class="wan-td-right">2.4G</td></tr>
                <tr class="dualHide">
                    <td class="wan-td-left"><%:Wireless Status%></td>
                    <td class="wan-td-right">
                        <input type="radio" name="wireless-status" value="1"><%:ENABLE%>
                        <input type="radio" name="wireless-status" value="0"><%:forbid%>
                    </td>
                </tr>
                <tr class="dualHide"><td class="wan-td-left"><%:SSID%></td><td class="wan-td-right"><input id="ssid" maxlength="32" onkeyup="noSpaceWord(this)">(<%:1-32 characters%>) <input class="wirelessRadio hideSSID" type="CHECKBOX" checked/><%:Turn on wireless radio%></td></tr>
                <!--<tr>
                    <td class="wan-td-left"><%:Wireless isolation%></td>
                    <td class="wan-td-right">
                        <input type="radio" name="wireless-isolation" value="1"><%:ENABLE%>
                        <input type="radio" name="wireless-isolation" value="0"><%:forbid%>
                    </td>
                </tr>
                <tr>
                    <td class="wan-td-left"><%:Wireless hide%></td>
                    <td class="wan-td-right">
                        <input type="radio" name="wireless-hide" value="1"><%:ENABLE%>
                        <input type="radio" name="wireless-hide" value="0"><%:forbid%>
                    </td>
                </tr>-->
                <tr class="dualHide">
                    <td class="wan-td-left"><%:Security options%></td>
                    <td class="wan-td-right"><select id="encryption" onchange="changeEncryption('encryption')">
                        <option value="open"><%:off the security options%></option>
                        <option value="wpa2-psk"><%:encryption(WPA2-PSK)%></option>
                    </select></td>
                </tr>
                <tr class="dualHide" id="encryption-password" style="display: none">
                    <td class="wan-td-left"><%:wireless password%></td>
                    <td class="wan-td-right"><input id="password" maxlength="63" onkeyup="nStrLimit(this)"></td>
                </tr>
                <tr>
                    <td class="wan-td-left channelText24g"><%:channel%></td>
                    <td class="wan-td-right">
                        <select class="channel">
                            <option value="0"><%:auto%></option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10">10</option>
                            <option value="11">11</option>
                            <option value="12">12</option>
                            <option value="13">13</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td class="wan-td-left bandwidthText24g"><%:Spectrum bandwidth%></td>
                    <td class="wan-td-right">
                        <select class="bandwidth">
                            <!--<option value="auto"><%:auto%></option>-->
                            <option value="HT20">20MHZ</option>
                            <option value="HT40">40MHZ</option>
                        </select>
                    </td>
                </tr>
                <!--<tr>
                    <td class="wan-td-left"><%:bandwidth limit%></td>
                    <td class="wan-td-right">
                        <input type="radio" name="band-width-limit" value="1" onchange="enableBandWidthLimit('2.4G')"><%:ENABLE%>
                        <input type="radio" name="band-width-limit" value="0" onchange="enableBandWidthLimit('2.4G')"><%:forbid%>
                    </td>
                </tr>
                <tr id="band-width-limit-upload" style="display: none">
                    <td class="wan-td-left"><%:upload limit%></td>
                    <td class="wan-td-right"><input id="upload" maxlength="8" onkeyup="numLimit(this)">KB/S</td>
                </tr>
                <tr id="band-width-limit-download" style="display: none">
                    <td class="wan-td-left"><%:download limit%></td>
                    <td class="wan-td-right"><input id="download" maxlength="8" onkeyup="numLimit(this)">KB/S</td>
                </tr>-->
                <tr class="border-line dualHide"><td class="wan-td-left"></td><td class="wan-td-right">5G</td></tr>
                <tr>
                    <td class="wan-td-left"><%:Wireless Status%></td>
                    <td class="wan-td-right">
                        <input type="radio" name="new-wireless-status-5" value="1"><%:ENABLE%>
                        <input type="radio" name="new-wireless-status-5" value="0"><%:forbid%>
                    </td>
                </tr>
                <tr>
                    <td class="wan-td-left"><%:SSID%></td>
                    <td class="wan-td-right"><input id="ssid-5" maxlength="32" onkeyup="noSpaceWord(this)">(<%:1-32 characters%>) <input class="wirelessRadio hideSSID-5" type="CHECKBOX" checked/><%:Turn on wireless radio%></td>
                </tr>
                <!--<tr>
                    <td class="wan-td-left"><%:Wireless isolation%></td>
                    <td class="wan-td-right">
                        <input type="radio" name="wireless-isolation-5" value="1"><%:ENABLE%>
                        <input type="radio" name="wireless-isolation-5" value="0"><%:forbid%>
                    </td>
                </tr>
                <tr>
                    <td class="wan-td-left"><%:Wireless hide%></td>
                    <td class="wan-td-right">
                        <input type="radio" name="wireless-hide-5" value="1"><%:ENABLE%>
                        <input type="radio" name="wireless-hide-5" value="0"><%:forbid%>
                    </td>
                </tr>-->
                <tr>
                    <td class="wan-td-left"><%:Security options%></td>
                    <td class="wan-td-right"><select id="encryption-5" onchange="changeEncryption('encryption-5')">
                        <option value="open"><%:off the security options%></option>
                        <option value="wpa2-psk"><%:encryption(WPA2-PSK)%></option>
                    </select></td>
                </tr>
                <tr id="encryption-5-password" style="display: none">
                    <td class="wan-td-left"><%:wireless password%></td>
                    <td class="wan-td-right"><input id="password-5" maxlength="63" onkeyup="nStrLimit(this)"></td>
                </tr>
                <tr>
                    <td class="wan-td-left channelText5g"><%:channel%></td>
                    <td class="wan-td-right">
                        <select class="channel-5" onchange="channel165(this,'new-group-table')">
                            <option value="0"><%:auto%></option>
                            <option value="36">36</option>
                            <option value="40">40</option>
                            <option value="44">44</option>
                            <option value="48">48</option>
                            <!--
                            <option value="52">52</option>
                            <option value="56">56</option>
                            <option value="60">60</option>
                            <option value="64">64</option>
                            -->
                            <option value="149">149</option>
                            <option value="153">153</option>
                            <option value="157">157</option>
                            <option value="161">161</option>
                            <option value="165">165</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td class="wan-td-left bandwidthText5g"><%:Spectrum bandwidth%></td>
                    <td class="wan-td-right">
                        <select class="bandwidth-5">
                            <!--<option value="auto"><%:auto%></option>-->
                            <option value="VHT20">20MHZ</option>
                            <option value="VHT40">40MHZ</option>
                            <option value="VHT80">80MHZ</option>
                        </select>
                    </td>
                </tr>
                <!--<tr>
                    <td class="wan-td-left"><%:bandwidth limit%></td>
                    <td class="wan-td-right">
                        <input type="radio" name="band-width-limit-5" value="1" onchange="enableBandWidthLimit('5G')"><%:ENABLE%>
                        <input type="radio" name="band-width-limit-5" value="0" onchange="enableBandWidthLimit('5G')"><%:forbid%>
                    </td>
                </tr>
                <tr id="band-width-limit-5-upload" style="display: none">
                    <td class="wan-td-left"><%:upload limit%></td>
                    <td class="wan-td-right"><input id="upload-5" maxlength="8" onkeyup="numLimit(this)">KB/S</td>
                </tr>
                <tr id="band-width-limit-5-download" style="display: none">
                    <td class="wan-td-left"><%:download limit%></td>
                    <td class="wan-td-right"><input id="download-5" maxlength="8" onkeyup="numLimit(this)">KB/S</td>
                </tr>-->
                <tr><td class="wan-td-left"><input type="checkbox" class="enable_prevent" onchange="changeStatus(this,'new-group','sta_min_dbm')"><%:enable%></td><td class="wan-td-right"><%:Prohibit signal strength below%><input class="sta_min_dbm" onkeyup="minusNumlimt(this)" maxlength="3" disabled value="-70" style="width: 4em;"><%:DBm wireless client access range error%></td></tr>
                <tr><td class="wan-td-left"><input type="checkbox" class="enable_kick" onchange="changeStatus(this,'new-group','weak_sta_signal')"><%:enable%></td><td class="wan-td-right"><%:The kick signal strength is lower than%><input class="weak_sta_signal" onkeyup="minusNumlimt(this)" maxlength="3" disabled value="-75" style="width: 4em;"><%:Wireless client of dBm%></td></tr>
                <tr ><td class="wan-td-left"></td><td class="wan-td-right"><button id="addGroupSure" onclick="setApGroups(0)"><%:confirm%></button> <button onclick="closeNewGroup()"><%:cancel%></button></td></tr>
            </table>
        </div>
    </div>

    <div id="edit-group" class="hsVignetteCon" style="display: none;">
        <div class="hsVigApGroup">
            <p class="hsVigTtop"><i class="hsVigClose" onclick="closeEditGroup()"></i></p>
            <table id="edit-group-table" class="tb-no-border">
                   <tr><td class="wan-td-left"><%:Group Name%></td><td class="wan-td-right"><input id="edit-group-name" maxlength="32" onkeyup="numLetterLimit(this)" style="ime-mode:disabled"></td></tr>
                <tr class="border-line dualHide"><td class="wan-td-left"></td><td class="wan-td-right">2.4G</td></tr>
                <tr class="dualHide">
                    <td class="wan-td-left"><%:Wireless Status%></td>
                    <td class="wan-td-right">
                        <input type="radio" name="edit-wireless-status" value="1"><%:ENABLE%>
                        <input type="radio" name="edit-wireless-status" value="0"><%:forbid%>
                    </td>
                </tr>
                <tr class="dualHide"><td class="wan-td-left"><%:SSID%></td><td class="wan-td-right"><input id="edit-ssid" maxlength="32" onkeyup="noSpaceWord(this)">(<%:1-32 characters%>)<input class="wirelessRadio hideSSID" type="CHECKBOX" checked/><%:Turn on wireless radio%></td></tr>
                <!--<tr>
                    <td class="wan-td-left"><%:Wireless isolation%></td>
                    <td class="wan-td-right">
                        <input type="radio" name="edit-wireless-isolation" value="1"><%:ENABLE%>
                        <input type="radio" name="edit-wireless-isolation" value="0"><%:forbid%>
                    </td>
                </tr>
                <tr>
                    <td class="wan-td-left"><%:Wireless hide%></td>
                    <td class="wan-td-right">
                        <input type="radio" name="edit-wireless-hide" value="1"><%:ENABLE%>
                        <input type="radio" name="edit-wireless-hide" value="0"><%:forbid%>
                    </td>
                </tr>-->
                <tr class="dualHide">
                    <td class="wan-td-left"><%:Security options%></td>
                    <td class="wan-td-right"><select id="edit-encryption" onchange="changeEncryption('edit-encryption')">
                        <option value="open"><%:off the security options%></option>
                        <option value="wpa2-psk"><%:encryption(WPA2-PSK)%></option>
                    </select></td>
                </tr>
                <tr class="dualHide" id="edit-encryption-password" style="display: none">
                    <td class="wan-td-left"><%:wireless password%></td>
                    <td class="wan-td-right"><input id="edit-password" maxlength="63" onkeyup="nStrLimit(this)"></td>
                </tr>
                <tr>
                    <td class="wan-td-left channelText24g"><%:channel%></td>
                    <td class="wan-td-right">
                        <select class="channel">
                            <option value="0"><%:auto%></option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10">10</option>
                            <option value="11">11</option>
                            <option value="12">12</option>
                            <option value="13">13</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td class="wan-td-left bandwidthText24g"><%:Spectrum bandwidth%></td>
                    <td class="wan-td-right">
                        <select class="bandwidth">
                            <!--<option value="auto"><%:auto%></option>-->
                            <option value="HT20">20MHZ</option>
                            <option value="HT40">40MHZ</option>
                        </select>
                    </td>
                </tr>
                <!-- <tr>
                    <td class="wan-td-left"><%:bandwidth limit%></td>
                    <td class="wan-td-right">
                        <input type="radio" name="edit-band-width-limit" value="1" onchange="enableBandWidthLimit('edit-2.4G')"><%:ENABLE%>
                        <input type="radio" name="edit-band-width-limit" value="0" onchange="enableBandWidthLimit('edit-2.4G')"><%:forbid%>
                    </td>
                </tr>
                <tr id="edit-band-width-limit-upload" style="display: none">
                    <td class="wan-td-left"><%:upload limit%></td>
                    <td class="wan-td-right"><input id="edit-upload" maxlength="8" onkeyup="numLimit(this)">KB/S</td>
                </tr>
                <tr id="edit-band-width-limit-download" style="display: none">
                    <td class="wan-td-left"><%:download limit%></td>
                    <td class="wan-td-right"><input id="edit-download" maxlength="8" onkeyup="numLimit(this)">KB/S</td>
                </tr>-->
                <tr class="border-line dualHide"><td class="wan-td-left"></td><td class="wan-td-right">5G</td></tr>
                <tr>
                    <td class="wan-td-left"><%:Wireless Status%></td>
                    <td class="wan-td-right">
                        <input type="radio" name="edit-wireless-status-5" value="1"><%:ENABLE%>
                        <input type="radio" name="edit-wireless-status-5" value="0"><%:forbid%>
                    </td>
                </tr>
                <tr>
                    <td class="wan-td-left"><%:SSID%></td>
                    <td class="wan-td-right"><input id="edit-ssid-5" maxlength="32" onkeyup="noSpaceWord(this)">(<%:1-32 characters%>)<input class="wirelessRadio hideSSID-5" type="CHECKBOX" checked/><%:Turn on wireless radio%></td>
                </tr>
                <!--<tr>
                    <td class="wan-td-left"><%:Wireless isolation%></td>
                    <td class="wan-td-right">
                        <input type="radio" name="edit-wireless-isolation-5" value="1"><%:ENABLE%>
                        <input type="radio" name="edit-wireless-isolation-5" value="0"><%:forbid%>
                    </td>
                </tr>
                <tr>
                    <td class="wan-td-left"><%:Wireless hide%></td>
                    <td class="wan-td-right">
                        <input type="radio" name="edit-wireless-hide-5" value="1"><%:ENABLE%>
                        <input type="radio" name="edit-wireless-hide-5" value="0"><%:forbid%>
                    </td>
                </tr>-->
                <tr>
                    <td class="wan-td-left"><%:Security options%></td>
                    <td class="wan-td-right">
                        <select id="edit-encryption-5" onchange="changeEncryption('edit-encryption-5')">
                            <option value="open"><%:off the security options%></option>
                            <option value="wpa2-psk"><%:encryption(WPA2-PSK)%></option>
                        </select></td>
                </tr>
                <tr id="edit-encryption-5-password">
                    <td class="wan-td-left"><%:wireless password%></td>
                    <td class="wan-td-right"><input id="edit-password-5" maxlength="63" onkeyup="nStrLimit(this)"></td>
                </tr>
                <tr>
                    <td class="wan-td-left channelText5g"><%:channel%></td>
                    <td class="wan-td-right">
                        <select class="channel-5" onchange="channel165(this,'edit-group-table')">
                            <option value="0"><%:auto%></option>
                            <option value="36">36</option>
                            <option value="40">40</option>
                            <option value="44">44</option>
                            <option value="48">48</option>
                            <!--
                            <option value="52">52</option>
                            <option value="56">56</option>
                            <option value="60">60</option>
                            <option value="64">64</option>
                            -->
                            <option value="149">149</option>
                            <option value="153">153</option>
                            <option value="157">157</option>
                            <option value="161">161</option>
                            <option value="165">165</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td class="wan-td-left bandwidthText5g"><%:Spectrum bandwidth%></td>
                    <td class="wan-td-right">
                        <select class="bandwidth-5">
                            <!--<option value="auto"><%:auto%></option>-->
                            <option value="VHT20">20MHZ</option>
                            <option value="VHT40">40MHZ</option>
                            <option value="VHT80">80MHZ</option>
                        </select>
                    </td>
                </tr>
                <!--<tr>
                    <td class="wan-td-left"><%:bandwidth limit%></td>
                    <td class="wan-td-right">
                        <input type="radio" name="edit-band-width-limit-5" value="1" onchange="enableBandWidthLimit('edit-5G')"><%:ENABLE%>
                        <input type="radio" name="edit-band-width-limit-5" value="0" onchange="enableBandWidthLimit('edit-5G')"><%:forbid%>
                    </td>
                </tr>
                <tr id="edit-band-width-limit-5-upload" style="display: none">
                    <td class="wan-td-left"><%:upload limit%></td>
                    <td class="wan-td-right"><input id="edit-upload-5" maxlength="8" onkeyup="numLimit(this)">KB/S</td>
                </tr>
                <tr id="edit-band-width-limit-5-download" style="display: none">
                    <td class="wan-td-left"><%:download limit%></td>
                    <td class="wan-td-right"><input id="edit-download-5" maxlength="8" onkeyup="numLimit(this)">KB/S</td>
                </tr>-->
                <tr><td class="wan-td-left"><input type="checkbox" class="enable_prevent" onchange="changeStatus(this,'edit-group','sta_min_dbm')"><%:enable%></td><td class="wan-td-right"><%:Prohibit signal strength below%><input class="sta_min_dbm" onkeyup="minusNumlimt(this)" maxlength="3" disabled value="-70" style="width: 4em;"><%:DBm wireless client access range error%></td></tr>
                <tr><td class="wan-td-left"><input type="checkbox" class="enable_kick" onchange="changeStatus(this,'edit-group','weak_sta_signal')"><%:enable%></td><td class="wan-td-right"><%:The kick signal strength is lower than%><input class="weak_sta_signal" onkeyup="minusNumlimt(this)" maxlength="3" disabled value="-75" style="width: 4em;"><%:Wireless client of dBm%></td></tr>
                <tr ><td class="wan-td-left"></td><td class="wan-td-right"><button id="setGroupSure" onclick="setApGroups(1)"><%:confirm%></button> <button onclick="closeEditGroup()"><%:cancel%></button></td></tr>
            </table>
        </div>
    </div>
    <div id="group-info" style="display: none">
        <table>
            <tr>
                <td colspan="10" id="group-info-group-name">default <%:group info%></td>
            </tr>
            <tr>
                <td colspan="10">
                    <button onclick="hideParts(['group-info']);showParts(['groups-info']);getApGroups();"><%:return group%></button>
                    <button id="changeGroup" onclick="showGroupSelect()" disabled><%:change group%></button>
                    <button id="batchGroup" onclick="showBatchInfo()" disabled><%:bulk edit%></button>
                    <button onclick="showGroupInfo(0)"><%:refresh%></button>
                    <button id="delGroup" onclick="delBatch()" disabled><%:delete%></button>
                </td>
            </tr>
        </table>
        <table id="ap-list">
        </table>
    </div>

    <div id="ap-infos" class="hsVignetteCon" style="display: none;">
        <div class="hsVigApGroup">
            <p class="hsVigTtop"><i class="hsVigClose" onclick="hideParts(['ap-infos'])"></i></p>
            <table class="tb-no-border">
                <tr class="dualHide">
                    <td class="wan-td-left">
                        <span style=" padding-right: 10px; "><%:frequency band%></span>
                    </td>
                    <td class="wan-td-right">
                        <select id="ap-info-select" onChange="changeApInfo()">
                            <option value="0">2.4G</option>
                            <option value="1">5G</option>
                        </select>
                    </td>
                </tr>
            </table>
            <table id="ap-info-24G" class="tb-no-border">
                <tr>
                    <td class="wan-td-left"><%:Wireless Status%></td>
                    <td class="wan-td-right">
                        <input  type="radio" name="wireless-status-2.4" value="1"><%:ENABLE%>
                        <input  type="radio" name="wireless-status-2.4" value="0" ><%:forbid%>
                    </td>
                </tr>
                <tr>
                    <td class="wan-td-left"><%:SSID%></td>
                    <td class="wan-td-right"><input id="ap-info-public-ssid2" maxlength="32" onkeyup="noSpaceWord(this)">(<%:1-32 characters%>)<input class="wirelessRadio hideSSID" type="CHECKBOX" checked/><%:Turn on wireless radio%></td>
                </tr>
                <tr>
                    <td class="wan-td-left"><%:Security options%></td>
                    <td class="wan-td-right">
                        <select id="ap-info-public-encryption" onchange="changeEncryption('ap-info-public-encryption')">
                            <option value="open"><%:off the security options%></option>
                            <option value="wpa2-psk"><%:encryption(WPA2-PSK)%></option>
                        </select>
                    </td>
                </tr>
                <tr id="ap-info-public-encryption-password" style="display: none">
                    <td class="wan-td-left"><%:wireless password%></td>
                    <td class="wan-td-right"><input id="ap-info-public-password" maxlength="63" onkeyup="nStrLimit(this)"></td>
                </tr>
                <tr>
                    <td class="wan-td-left"><%:channel%></td>
                    <td class="wan-td-right">
                        <select class="channel">
                            <option value="0"><%:auto%></option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10">10</option>
                            <option value="11">11</option>
                            <option value="12">12</option>
                            <option value="13">13</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td class="wan-td-left"><%:Spectrum bandwidth%></td>
                    <td class="wan-td-right">
                        <select class="bandwidth">
                            <!--<option value="auto"><%:auto%></option>-->
                            <option value="HT20">20MHZ</option>
                            <option value="HT40">40MHZ</option>
                        </select>
                    </td>
                </tr>
            </table>
            <table id="ap-info-5G" class="tb-no-border" style="display: none">
                <tr>
                    <td class="wan-td-left"><%:Wireless Status%></td>
                    <td class="wan-td-right">
                        <input id="wirelssStateAbled" type="radio" name="wireless-status-5" value="1" ><%:ENABLE%>
                        <input id="wirelessStateDisabled" type="radio" name="wireless-status-5" value="0" ><%:forbid%>
                    </td>
                </tr>
                <tr>
                    <td class="wan-td-left"><%:SSID%></td>
                    <td class="wan-td-right"><input id="ap-info-public-ssid5" maxlength="32" onkeyup="noSpaceWord(this)">(<%:1-32 characters%>)<input class="wirelessRadio hideSSID-5" type="CHECKBOX" checked/><%:Turn on wireless radio%></td>
                </tr>
                <tr>
                    <td class="wan-td-left"><%:Security options%></td>
                    <td class="wan-td-right"><select id="ap-info-public-encryption-5" onchange="changeEncryption('ap-info-public-encryption-5')">
                        <option value="open"><%:off the security options%></option>
                        <option value="wpa2-psk"><%:encryption(WPA2-PSK)%></option>
                    </select></td>
                </tr>
                <tr id="ap-info-public-encryption-5-password" style="display: none">
                    <td class="wan-td-left"><%:wireless password%></td>
                    <td class="wan-td-right"><input id="ap-info-public-5-password" maxlength="63" onkeyup="nStrLimit(this)"></td>
                </tr>
                <tr>
                    <td class="wan-td-left channelText5g"><%:channel%></td>
                    <td class="wan-td-right">
                        <select class="channel-5" onchange="channel165(this,'ap-info-5G')">
                            <option value="0"><%:auto%></option>
                            <option value="36">36</option>
                            <option value="40">40</option>
                            <option value="44">44</option>
                            <option value="48">48</option>
                            <!--
                            <option value="52">52</option>
                            <option value="56">56</option>
                            <option value="60">60</option>
                            <option value="64">64</option>
                            -->
                            <option value="149">149</option>
                            <option value="153">153</option>
                            <option value="157">157</option>
                            <option value="161">161</option>
                            <option value="165">165</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td class="wan-td-left bandwidthText5g"><%:Spectrum bandwidth%></td>
                    <td class="wan-td-right">
                        <select class="bandwidth-5">
                            <!--<option value="auto"><%:auto%></option>-->
                            <option value="VHT20">20MHZ</option>
                            <option value="VHT40">40MHZ</option>
                            <option value="VHT80">80MHZ</option>
                        </select>
                    </td>
                </tr>
                <tr class="dualShow" style="display: none;">
                    <td class="wan-td-left">2.4G<%:channel%></td>
                    <td class="wan-td-right">
                        <select class="channel">
                            <option value="0"><%:auto%></option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10">10</option>
                            <option value="11">11</option>
                            <option value="12">12</option>
                            <option value="13">13</option>
                        </select>
                    </td>
                </tr>
                <tr class="dualShow" style="display: none;">
                    <td class="wan-td-left">2.4G<%:Spectrum bandwidth%></td>
                    <td class="wan-td-right">
                        <select class="bandwidth">
                            <!--<option value="auto"><%:auto%></option>-->
                            <option value="HT20">20MHZ</option>
                            <option value="HT40">40MHZ</option>
                        </select>
                    </td>
                </tr>
            </table>
            <table id="ap-info-public" class="tb-no-border">
                <tr>
                    <td class="wan-td-left"><%:Name%></td>
                    <td class="wan-td-right"><input id="ap-info-public-name" maxlength="45" onkeyup="noSpaceWord(this)"><%:(1-45characters)%></td>
                </tr>
                <tr>
                    <td class="wan-td-left"><%:AP alive-time%></td>
                    <td class="wan-td-right">
                        <input id="apAliveTime" maxlength=2 onkeyup="numLimit(this)"><%:(20-80 seconds)%></td>
                </tr>
                <tr>
                    <td class="wan-td-left"><%:LED%></td>
                    <td class="wan-td-right">
                        <input type="radio" name="led-enable" value="1"><%:ON%>
                        <input type="radio" name="led-enable" value="0"><%:OFF%>
                    </td>
                </tr>
            </table>
            <table id="ap-info-public-kick" class="tb-no-border">
                <tr><td class="wan-td-left"><input type="checkbox" class="enable_prevent" onchange="changeStatus(this,'ap-info-public-kick','sta_min_dbm')"><%:enable%></td><td class="wan-td-right"><%:Prohibit signal strength below%><input class="sta_min_dbm" onkeyup="minusNumlimt(this)" maxlength="3" disabled value="-70" style="width: 4em;"><%:DBm wireless client access range error%></td></tr>
                <tr><td class="wan-td-left"><input type="checkbox" class="enable_kick" onchange="changeStatus(this,'ap-info-public-kick','weak_sta_signal')"><%:enable%></td><td class="wan-td-right"><%:The kick signal strength is lower than%><input class="weak_sta_signal" onkeyup="minusNumlimt(this)" maxlength="3" disabled value="-75" style="width: 4em;"><%:Wireless client of dBm%></td></tr>
            </table>
            <table class="tb-no-border">
                <tr>
                    <td class="wan-td-left"><div></div></td>
                    <td class="wan-td-right">
                        <button id='setApInfoBtn' onclick="setApInfo()"><%:confirm%></button>
                        <button onclick="hideParts(['ap-infos'])"><%:cancel%></button>
                    </td>
                </tr>
            </table>
        </div>
    </div>

    <div id="batch-edit-group" class="hsVignetteCon" style="display: none;">
        <div class="hsVigApGroup">
            <p class="hsVigTtop"><i class="hsVigClose" onclick="hideParts(['batch-edit-group'])"></i></p>
            <div>
                <table class="tb-no-border">
                    <tr class="dualHide">
                        <td class="wan-td-left">
                            <span style=" padding-right: 10px; "><%:frequency band%></span>
                        </td>
                        <td class="wan-td-right">
                            <select id="batch-edit-group-info-select" onChange="changebatchInfo()">
                                <option value="0">2.4G</option>
                                <option value="1">5G</option>
                            </select>
                        </td>
                    </tr>
                </table>
                <table id="batch-edit-group-ap-info-24G" class="tb-no-border">
                    <tr>
                        <td class="wan-td-left"><%:Wireless Status%></td>
                        <td class="wan-td-right">
                            <input type="radio" name="batch-edit-group-wireless-status-2.4" value="1"><%:ENABLE%>
                            <input type="radio" name="batch-edit-group-wireless-status-2.4" value="0"><%:forbid%>
                        </td>
                    </tr>
                    <tr>
                        <td class="wan-td-left"><%:SSID%></td>
                        <td class="wan-td-right"><input id="batch-edit-group-ssid-2.4" maxlength="32" onkeyup="noSpaceWord(this)">(<%:1-32 characters%>)<input class="wirelessRadio hideSSID" type="CHECKBOX" checked/><%:Turn on wireless radio%></td>
                    </tr>
                    <tr>
                        <td class="wan-td-left"><%:Security options%></td>
                        <td class="wan-td-right">
                            <select id="batch-edit-group-info-public-encryption-2.4" onchange="changeEncryption('batch-edit-group-info-public-encryption-2.4')">
                                <option value="open"><%:off the security options%></option>
                                <option value="wpa2-psk"><%:encryption(WPA2-PSK)%></option>
                            </select></td>
                    </tr>
                    <tr id="batch-edit-group-info-public-encryption-2.4-password" style="display: none">
                        <td class="wan-td-left"><%:wireless password%></td>
                        <td class="wan-td-right"><input id="batch-edit-group-2.4-password" maxlength="63" onkeyup="nStrLimit(this)"></td>
                    </tr>
                    <tr>
                        <td class="wan-td-left"><%:channel%></td>
                        <td class="wan-td-right">
                            <select class="channel">
                                <option value="0"><%:auto%></option>
                                <option value="1">1</option>
                                <option value="2">2</option>
                                <option value="3">3</option>
                                <option value="4">4</option>
                                <option value="5">5</option>
                                <option value="6">6</option>
                                <option value="7">7</option>
                                <option value="8">8</option>
                                <option value="9">9</option>
                                <option value="10">10</option>
                                <option value="11">11</option>
                                <option value="12">12</option>
                                <option value="13">13</option>
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <td class="wan-td-left"><%:Spectrum bandwidth%></td>
                        <td class="wan-td-right">
                            <select class="bandwidth">
                                <!--<option value="auto"><%:auto%></option>-->
                                <option value="HT20">20MHZ</option>
                                <option value="HT40">40MHZ</option>
                            </select>
                        </td>
                    </tr>
                </table>
                <table id="batch-edit-group-ap-info-5G" class="tb-no-border" style="display: none">
                    <tr>
                        <td class="wan-td-left"><%:Wireless Status%></td>
                        <td class="wan-td-right">
                            <input type="radio" name="batch-edit-group-wireless-status-5" value="1"><%:ENABLE%>
                            <input type="radio" name="batch-edit-group-wireless-status-5" value="0"><%:forbid%>
                        </td>
                    </tr>
                    <tr>
                        <td class="wan-td-left"><%:SSID%></td>
                        <td class="wan-td-right"><input id="batch-edit-group-ssid-5" maxlength="32" onkeyup="noSpaceWord(this)">(<%:1-32 characters%>)<input class="wirelessRadio hideSSID-5" type="CHECKBOX" checked/><%:Turn on wireless radio%></td>
                    </tr>
                    <tr>
                        <td class="wan-td-left"><%:Security options%></td>
                        <td class="wan-td-right"><select id="batch-edit-group-encryption-5" onchange="changeEncryption('batch-edit-group-encryption-5')">
                            <option value="open"><%:off the security options%></option>
                            <option value="wpa2-psk"><%:encryption(WPA2-PSK)%></option>
                        </select></td>
                    </tr>
                    <tr id="batch-edit-group-encryption-5-password" style="display: none">
                        <td class="wan-td-left"><%:wireless password%></td>
                        <td class="wan-td-right"><input id="batch-edit-group-5-password" maxlength="63" onkeyup="nStrLimit(this)"></td>
                    </tr>
                    <tr class="dualShow" style="display: none;">
                        <td class="wan-td-left">2.4G<%:channel%></td>
                        <td class="wan-td-right">
                            <select class="channel">
                                <option value="0"><%:auto%></option>
                                <option value="1">1</option>
                                <option value="2">2</option>
                                <option value="3">3</option>
                                <option value="4">4</option>
                                <option value="5">5</option>
                                <option value="6">6</option>
                                <option value="7">7</option>
                                <option value="8">8</option>
                                <option value="9">9</option>
                                <option value="10">10</option>
                                <option value="11">11</option>
                                <option value="12">12</option>
                                <option value="13">13</option>
                            </select>
                        </td>
                    </tr>
                    <tr class="dualShow" style="display: none;">
                        <td class="wan-td-left">2.4G<%:Spectrum bandwidth%></td>
                        <td class="wan-td-right">
                            <select class="bandwidth">
                                <!--<option value="auto"><%:auto%></option>-->
                                <option value="HT20">20MHZ</option>
                                <option value="HT40">40MHZ</option>
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <td class="wan-td-left channelText5g"><%:channel%></td>
                        <td class="wan-td-right">
                            <select class="channel-5" onchange="channel165(this,'batch-edit-group-ap-info-5G')">
                                <option value="0"><%:auto%></option>
                                <option value="36">36</option>
                                <option value="40">40</option>
                                <option value="44">44</option>
                                <option value="48">48</option>
                                <!--
                                <option value="52">52</option>
                                <option value="56">56</option>
                                <option value="60">60</option>
                                <option value="64">64</option>
                                -->
                                <option value="149">149</option>
                                <option value="153">153</option>
                                <option value="157">157</option>
                                <option value="161">161</option>
                                <option value="165">165</option>
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <td class="wan-td-left bandwidthText5g"><%:Spectrum bandwidth%></td>
                        <td class="wan-td-right">
                            <select class="bandwidth-5">
                                <!--<option value="auto"><%:auto%></option>-->
                                <option value="VHT20">20MHZ</option>
                                <option value="VHT40">40MHZ</option>
                                <option value="VHT80">80MHZ</option>
                            </select>
                        </td>
                    </tr>
                </table>
                <table id="batch-edit-group-ap-info-public" class="tb-no-border">
                    <tr>
                        <td class="wan-td-left"><%:Name%></td>
                        <td class="wan-td-right"><input id="batch-edit-group-ap-info-public-name" maxlength="45" onkeyup="noSpaceWord(this)"><%:(1-45characters)%></td>
                    </tr>
                    <tr>
                        <td class="wan-td-left"><%:AP alive-time%></td>
                        <td class="wan-td-right">
                            <input id="batch-edit-group-alive-time" maxlength="2" onkeyup="numLimit(this)" value="20"><%:(20-80 seconds)%></td>
                    </tr>
                    <tr>
                        <td class="wan-td-left"><%:LED%></td>
                        <td class="wan-td-right">
                            <input type="radio" name="batch-edit-group-led-enable" value="1"><%:ON%>
                            <input type="radio" name="batch-edit-group-led-enable" value="0"><%:OFF%>
                        </td>
                    </tr>
                </table>
                <table id="batch-edit-group-ap-info-public-kick" class="tb-no-border">
                    <tr><td class="wan-td-left"><input type="checkbox" class="enable_prevent" onchange="changeStatus(this,'batch-edit-group-ap-info-public-kick','sta_min_dbm')"><%:enable%></td><td class="wan-td-right"><%:Prohibit signal strength below%><input class="sta_min_dbm" onkeyup="minusNumlimt(this)" maxlength="3" disabled value="-70" style="width: 4em;"><%:DBm wireless client access range error%></td></tr>
                    <tr><td class="wan-td-left"><input type="checkbox" class="enable_kick" onchange="changeStatus(this,'batch-edit-group-ap-info-public-kick','weak_sta_signal')"><%:enable%></td><td class="wan-td-right"><%:The kick signal strength is lower than%><input class="weak_sta_signal" onkeyup="minusNumlimt(this)" maxlength="3" disabled value="-75" style="width: 4em;"><%:Wireless client of dBm%></td></tr>
                </table>
                <table class="tb-no-border">
                    <tr>
                        <td class="wan-td-left"><div></div></td>
                        <td class="wan-td-right">
                            <button id="setBatchEditBtn" onclick="setBatchEditGruopInfo() "><%:confirm%></button>
                            <button onclick="hideParts(['batch-edit-group'])"><%:cancel%></button>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
    </div>

    <div id="ap-groups-modify" class="hsVignetteCon" style="display: none;">
        <div class="hsVigApGroup">
            <p class="hsVigTtop"><i class="hsVigClose" onclick="hideParts(['ap-groups-modify'])"></i></p>
            <div style="text-align: center;margin-bottom: 15px">
                <select id="ap-groups-select">
                </select>
            </div>
            <p align="center" style="margin-bottom: 20px;"><button onclick="changeApGroup()"><%:confirm%></button><button onclick="hideParts(['ap-groups-modify'])"><%:cancel%></button></p>
        </div>
    </div>

</fieldset>
<%+footer%>
<script>
    // global vars
    var apGroups;
    var action; // action = 0 新增; 1 编辑;
    var apList;
    var enableAutoGetApGroups = false;
    var editIndex;
    var apInfoIndex;
    var apInfoGroupIndex;
    var batchEditApInfoShowIndex;
    var errTipDoc;
    var isRealNextPage = false;
    var dualEnable = 1;
    supportQuerySelector();

    // load functions
    getApGroups();
    dualDisplay(true);
    getDual();

    // router get interfaces
    function getApGroups() {
        XHR.get('<%=luci.dispatcher.build_url("admin", "ap","get_ap_groups")%>', null,
            function(x, result) {
            if(result==null){
                var err = document.getElementById('Error');
                var text = err.getElementsByTagName('span')[0];
                text.innerText = "<%:router connection failure%>";
                err.style.visibility = 'visible';
            }else if(result.code == 0) {
                    console.log(result);
                    apGroups = result.ap_group_list;
                    var html = '<tr><td><input id="choose-all-or-not" onchange="chooseAllOrNot()" type="checkbox"></td><td><%:index%></td><td><%:Group Name%></td><td><%:group-info%></td><td><%:Set%></td></tr>';
                    for (var i=0; i<apGroups.length; i++) {
                        if (i == 0) {
                            html += '<tr><td><input id="cb-'+apGroups[i].index+'" type="checkbox" disabled="disabled"></td><td>'+(i+1)+'</td><td>'+apGroups[i].name+
                                '</td><td><a class="line_a" onclick="showGroupInfo('+apGroups[i].index+');isNextPage()">'+
                                apGroups[i].info.total+'/'+apGroups[i].info.alive+','+apGroups[i].info.unworkable+
                                '</a></td><td><button onclick="editGroupInfo('+i+')"><%:Set%></button></td></tr>';
                        } else {
                            html += '<tr><td><input id="cb-'+apGroups[i].index+'" type="checkbox" onchange="apGoupDelChange(this,1)"></td><td>'+(i+1)+'</td><td>'+apGroups[i].name+
                                '</td><td><a class="line_a" onclick="showGroupInfo('+apGroups[i].index+');isNextPage()">'+
                                apGroups[i].info.total+'/'+apGroups[i].info.alive+','+apGroups[i].info.unworkable+
                                '</a></td><td><button onclick="editGroupInfo('+i+')"><%:Set%></button></td></tr>';
                        }
                    }
                    var apGroupsTable = document.getElementById('ap-groups');
                    setTableInnerHTML(apGroupsTable, html);
                }
            });
    }

    //router set interfaces
    function setApGroups(buttonAction) {
        var err = document.getElementById('Error');
        var text = err.getElementsByTagName('span')[0];
        if (buttonAction == 0) {//0 means new a group
            var name = document.getElementById('group-name').value;
            var table = document.querySelector('#new-group table');
            if (name==null||name=="") {
                text.innerText = '<%:Please input group name%>';
                err.style.visibility = 'visible';
                errTipDoc = document.getElementById('group-name');
                return;
            }
            if (strlen(name)>32) {
                text.innerText = '<%:The character length cannot be more than 32 bits!%>';
                err.style.visibility = 'visible';
                errTipDoc = document.getElementById('group-name');
                return;
            }
            if (name.search(/[^a-zA-Z0-9]/g) != -1){
                text.innerText = '<%:group name contain invalid character%>';
                err.style.visibility = 'visible';
                errTipDoc = document.getElementById('group-name');
                return;
            }
            for (var i=0; i<apGroups.length; i++) {
                if (name == apGroups[i].name){
                    text.innerText = '<%:this group name is already exist%>';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('group-name');
                    return;
                }
            }
            var ifaces = [];
            var ifaces_24g = {};
            var ifaces_5g = {};
            /*var band_width_limit_24g = {};
            var band_width_limit_5g = {};*/
            if(dualEnable == 0){
                var radios;
                ifaces_24g.band = 0;
                radios = document.getElementsByName('wireless-status');
                for (var i=0; i<radios.length; i++) {
                    if (radios[i].checked) {
                        ifaces_24g.enable = radios[i].value;
                    }
                }
                var ssid = document.getElementById('ssid').value;
                if (ssid != ''&&ssid!=null) {
                    ifaces_24g.ssid = ssid;
                } else {
                    text.innerText = '<%:Please input SSID%>';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('ssid');
                    return;
                }
                if (strlen(ssid)>32) {
                    text.innerText = '<%:The SSID character length cannot be more than 32 bits!%>';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('ssid');
                    return;
                }
                /* radios = document.getElementsByName('wireless-isolation');
                   for (var i=0; i<radios.length; i++) {
                   if (radios[i].checked) {
                   ifaces_24g.isolation = radios[i].value;
                   }
                   }
                   */
                var encryptionSelect = document.getElementById('encryption');
                ifaces_24g.encryption = encryptionSelect[encryptionSelect.selectedIndex].value;
                if (encryptionSelect[encryptionSelect.selectedIndex].value != 'open') {
                    var password = document.getElementById('password').value;
                    if ( password!= '') {
                        ifaces_24g.password = password;
                    } else {
                        text.innerText = '<%:Please input wireless-password%>';
                        err.style.visibility = 'visible';
                        errTipDoc = document.getElementById('password');
                        return;
                    }
                    if (password.length<8){
                        text.innerText = '<%:The password length is no less than 8 bits!%>';
                        err.style.visibility = 'visible';
                        errTipDoc = document.getElementById('password');
                        return;
                    }
                    if (password != check(password)){
                        text.innerText = '<%:password contain invalid character%>';
                        err.style.visibility = 'visible';
                        errTipDoc = document.getElementById('password');
                        return;
                    }
                }
                var channel = table.querySelector('.channel');
                ifaces_24g.channel = channel[channel.selectedIndex].value;
                var bandwidth = table.querySelector('.bandwidth');
                ifaces_24g.bandwidth = bandwidth[bandwidth.selectedIndex].value;

                ifaces_24g.enable_prevent = table.querySelector('.enable_prevent').checked?'1':'0';
                ifaces_24g.sta_min_dbm = table.querySelector('.sta_min_dbm').value;
                ifaces_24g.enable_kick = table.querySelector('.enable_kick').checked?'1':'0';
                ifaces_24g.weak_sta_signal = table.querySelector('.weak_sta_signal').value;

                ifaces_24g.hide = table.querySelector('.hideSSID').checked?'0':'1';
                if(checkKick(ifaces_24g ,table)){
                    return;
                }

                ifaces.push(ifaces_24g);
            }
            ifaces_5g.band = 1;
            radios = document.getElementsByName('new-wireless-status-5');
            for (var i=0; i<radios.length; i++) {
                if (radios[i].checked) {
                    ifaces_5g.enable = radios[i].value;
                }
            }
            var ssid5 = document.getElementById('ssid-5').value;
            if ( ssid5 != '') {
                ifaces_5g.ssid = document.getElementById('ssid-5').value;
            } else {
                text.innerText = '<%:Please input SSID%>';
                err.style.visibility = 'visible';
                errTipDoc = document.getElementById('ssid-5');
                return;
            }
            if (strlen(ssid5)>32) {
                text.innerText = '<%:The SSID character length cannot be more than 32 bits!%>';
                err.style.visibility = 'visible';
                errTipDoc = document.getElementById('ssid-5');
                return;
            }
           /* radios = document.getElementsByName('wireless-isolation-5');
            for (var i=0; i<radios.length; i++) {
                if (radios[i].checked) {
                    ifaces_5g.isolation = radios[i].value;
                }
            }
            */
            var encryptionSelect = document.getElementById('encryption-5');
            ifaces_5g.encryption = encryptionSelect[encryptionSelect.selectedIndex].value;
            if (encryptionSelect[encryptionSelect.selectedIndex].value != 'open') {
                var password5 = document.getElementById('password-5').value;
                if ( password5!= '') {
                    ifaces_5g.password = password5;
                } else {
                    text.innerText = '<%:Please input wireless-password%>';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('password-5');
                    return;
                }
                if (password5.length<8){
                    text.innerText = '<%:The password length is no less than 8 bits!%>';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('password-5');
                    return;
                }
                if (password5 != check(password5)){
                    text.innerText = '<%:password contain invalid character%>';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('password-5');
                    return;
                }
            }
            var channel = table.querySelector('.channel-5');
            ifaces_5g.channel = channel[channel.selectedIndex].value;
            var bandwidth = table.querySelector('.bandwidth-5');
            ifaces_5g.bandwidth = bandwidth[bandwidth.selectedIndex].value;

            ifaces_5g.enable_prevent = table.querySelector('.enable_prevent').checked?'1':'0';
            ifaces_5g.sta_min_dbm = table.querySelector('.sta_min_dbm').value;
            ifaces_5g.enable_kick = table.querySelector('.enable_kick').checked?'1':'0';
            ifaces_5g.weak_sta_signal = table.querySelector('.weak_sta_signal').value;

            ifaces_5g.hide = table.querySelector('.hideSSID-5').checked?'0':'1';
            if(checkKick(ifaces_5g ,table)){
                return;
            }

            if(dualEnable == 1){
                $.extend(ifaces_24g, ifaces_5g);
                ifaces_24g.band = 0;
                var channel = table.querySelector('.channel');
                ifaces_24g.channel = channel[channel.selectedIndex].value;
                var bandwidth = table.querySelector('.bandwidth');
                ifaces_24g.bandwidth = bandwidth[bandwidth.selectedIndex].value;
                ifaces.push(ifaces_24g);
            }
            ifaces.push(ifaces_5g);
            var params = {'name':name, 'ifaces':ifaces};
            console.log("add_params:",params);
            XHR.post('<%=luci.dispatcher.build_url("admin", "ap","set_ap_group")%>', params,
                function(x, result) {
                    document.getElementById('addGroupSure').disabled = false;
                    if(result == null){
                        text.innerText = "<%:router connection failure%>";
                        err.style.visibility = 'visible';
                    }else if(result.code == 0) {
                        getApGroups();
                        document.getElementById('new-group').style.display = 'none';
                        document.getElementById('groups-info').style.display = '';
                        text.innerText = '<%:set successful%>';
                        err.style.visibility = 'visible';
                    }else {
                        text.innerText = result.msg;
                        err.style.visibility = 'visible';
                    }
                });
        } else {
            var name = document.getElementById('edit-group-name').value;
            var table = document.querySelector('#edit-group table');
            if (name == ''||name == null) {
                text.innerText = '<%:Please input group name%>';
                err.style.visibility = 'visible';
                errTipDoc = document.getElementById('edit-group-name');
                return;
            }
            if (name.search(/[^a-zA-Z0-9]/g) != -1){
                text.innerText = '<%:group name contain invalid character%>';
                err.style.visibility = 'visible';
                errTipDoc = document.getElementById('edit-group-name');
                return;
            }
            var ifaces = [];
            var ifaces_24g = {};
            var ifaces_5g = {};
            /*var band_width_limit_24g = {};
            var band_width_limit_5g = {};*/
            if(dualEnable == 0){
                var radios;
                ifaces_24g.band = 0;
                radios = document.getElementsByName('edit-wireless-status');
                for (var i=0; i<radios.length; i++) {
                    if (radios[i].checked) {
                        ifaces_24g.enable = radios[i].value;
                    }
                }
                var ssid = document.getElementById('edit-ssid').value;
                if (ssid!= '') {
                    ifaces_24g.ssid = ssid;
                } else {
                    text.innerText = '<%:Please input SSID%>';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('edit-ssid');
                    return;
                }
                if (strlen(ssid)>32) {
                    text.innerText = '<%:The SSID character length cannot be more than 32 bits!%>';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('edit-ssid');
                    return;
                }
                /*radios = document.getElementsByName('edit-wireless-isolation');
                  for (var i=0; i<radios.length; i++) {
                  if (radios[i].checked) {
                  ifaces_24g.isolation = radios[i].value;
                  }
                  }
                  */
                var encryptionSelect = document.getElementById('edit-encryption');
                ifaces_24g.encryption = encryptionSelect[encryptionSelect.selectedIndex].value;
                if (encryptionSelect[encryptionSelect.selectedIndex].value != 'open') {
                    var password = document.getElementById('edit-password').value;
                    if (password != '') {
                        ifaces_24g.password = password;
                    } else {
                        text.innerText = '<%:Please input wireless-password%>';
                        err.style.visibility = 'visible';
                        errTipDoc = document.getElementById('edit-password');
                        return;
                    }
                    if (password.length<8){
                        text.innerText = '<%:The password length is no less than 8 bits!%>';
                        err.style.visibility = 'visible';
                        errTipDoc = document.getElementById('edit-password');
                        return;
                    }
                    if (password != check(password)){
                        text.innerText = '<%:password contain invalid character%>';
                        err.style.visibility = 'visible';
                        errTipDoc = document.getElementById('edit-password');
                        return;
                    }
                }
                var channel = table.querySelector('.channel');
                ifaces_24g.channel = channel[channel.selectedIndex].value;
                var bandwidth = table.querySelector('.bandwidth');
                ifaces_24g.bandwidth = bandwidth[bandwidth.selectedIndex].value;

                ifaces_24g.enable_prevent = table.querySelector('.enable_prevent').checked?'1':'0';
                ifaces_24g.sta_min_dbm = table.querySelector('.sta_min_dbm').value;
                ifaces_24g.enable_kick = table.querySelector('.enable_kick').checked?'1':'0';
                ifaces_24g.weak_sta_signal = table.querySelector('.weak_sta_signal').value;

                ifaces_24g.hide = table.querySelector('.hideSSID').checked?'0':'1';
                if(checkKick(ifaces_24g ,table)){
                    return;
                }

                ifaces.push(ifaces_24g);
            }
            ifaces_5g.band = 1;
            radios = document.getElementsByName('edit-wireless-status-5');
            for (var i=0; i<radios.length; i++) {
                if (radios[i].checked) {
                    ifaces_5g.enable = radios[i].value;
                }
            }
            var ssid5 = document.getElementById('edit-ssid-5').value;
            if ( ssid5!= '') {
                ifaces_5g.ssid = ssid5;
            } else {
                text.innerText = '<%:Please input SSID%>';
                err.style.visibility = 'visible';
                errTipDoc = document.getElementById('edit-ssid-5');
                return;
            }
            if (strlen(ssid5)>32) {
                text.innerText = '<%:The SSID character length cannot be more than 32 bits!%>';
                err.style.visibility = 'visible';
                errTipDoc = document.getElementById('edit-ssid-5');
                return;
            }
           /* radios = document.getElementsByName('edit-wireless-isolation-5');
            for (var i=0; i<radios.length; i++) {
                if (radios[i].checked) {
                    ifaces_5g.isolation = radios[i].value;
                }
            }
            */
            var encryptionSelect = document.getElementById('edit-encryption-5');
            ifaces_5g.encryption = encryptionSelect[encryptionSelect.selectedIndex].value;
            if (encryptionSelect[encryptionSelect.selectedIndex].value != 'open') {
                var password5 = document.getElementById('edit-password-5').value;
                if ( password5!= '') {
                    ifaces_5g.password = password5;
                } else {
                    text.innerText = '<%:Please input wireless-password%>';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('edit-password-5');
                    return;
                }
                if (password5.length<8){
                    text.innerText = '<%:The password length is no less than 8 bits!%>';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('edit-password-5');
                    return;
                }
                if (password5 != check(password5)){
                    text.innerText = '<%:password contain invalid character%>';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('edit-password-5');
                    return;
                }
            }
            var channel = table.querySelector('.channel-5');
            ifaces_5g.channel = channel[channel.selectedIndex].value;
            var bandwidth = table.querySelector('.bandwidth-5');
            ifaces_5g.bandwidth = bandwidth[bandwidth.selectedIndex].value;

            ifaces_5g.enable_prevent = table.querySelector('.enable_prevent').checked?'1':'0';
            ifaces_5g.sta_min_dbm = table.querySelector('.sta_min_dbm').value;
            ifaces_5g.enable_kick = table.querySelector('.enable_kick').checked?'1':'0';
            ifaces_5g.weak_sta_signal = table.querySelector('.weak_sta_signal').value;

            ifaces_5g.hide = table.querySelector('.hideSSID-5').checked?'0':'1';
            if(checkKick(ifaces_5g ,table)){
                return;
            }

            if(dualEnable == 1){
                $.extend(ifaces_24g, ifaces_5g);
                ifaces_24g.band = 0;
                var channel = table.querySelector('.channel');
                ifaces_24g.channel = channel[channel.selectedIndex].value;
                var bandwidth = table.querySelector('.bandwidth');
                ifaces_24g.bandwidth = bandwidth[bandwidth.selectedIndex].value;
                ifaces.push(ifaces_24g);
            }
            ifaces.push(ifaces_5g);
            document.getElementById('setGroupSure').disabled = true;
            var params = {'index':editIndex, 'name':name, 'ifaces':ifaces};
            console.log("edit_params:",params);
            XHR.post('<%=luci.dispatcher.build_url("admin", "ap","set_ap_group")%>', params,
                function(x, result) {
                    document.getElementById('setGroupSure').disabled = false;
                    if(result == null){
                        text.innerText = "<%:router connection failure%>";
                        err.style.visibility = 'visible';
                    }else if(result.code == 0) {
                        getApGroups();
                        document.getElementById('edit-group').style.display = 'none';
                        document.getElementById('groups-info').style.display = '';
                        text.innerText = '<%:set successful%>';
                        err.style.visibility = 'visible';
                    } else {
                        getApGroups();
                        document.getElementById('edit-group').style.display = 'none';
                        document.getElementById('groups-info').style.display = '';
                        text.innerText = result.msg;
                        err.style.visibility = 'visible';
                    }
                });
        }
    }

    function setApInfo() {
//        console.log("in")
        var err = document.getElementById('Error');
        var text = err.getElementsByTagName('span')[0];
        var apListInfoToSet;
        apListInfoToSet = apList[apInfoIndex];
        console.log(apListInfoToSet);
        var mac = [];
        var mac_edit = apList[apInfoIndex].mac;
        mac.push(mac_edit);
        var ap_group_index = apInfoGroupIndex;
        var ap_alive_time = document.getElementById('apAliveTime').value;
       /* var client_alive_time = document.getElementById('clientAliveTime').value;
        var client_idle_time = document.getElementById('clientIdleTime').value;*/
        var name = document.getElementById('ap-info-public-name').value;
        var radios = document.getElementsByName('led-enable');
        var led;
        for (var i=0; i<radios.length; i++) {
            if (radios[i].checked) {
                led = radios[i].value;
            }
        }
        for (var i=0; i<apListInfoToSet.ifaces.length; i++) {
            if (apListInfoToSet.ifaces[i].band == 0 && dualEnable == 0) {
                var radios;
                radios = document.getElementsByName('wireless-status-2.4');
                for (var j=0; j<radios.length; j++) {
                    if (radios[j].checked) {
                        apListInfoToSet.ifaces[i].enable = radios[j].value;
                    }
                }
                apListInfoToSet.ifaces[i].ssid = document.getElementById('ap-info-public-ssid2').value;
                /*radios = document.getElementsByName('wireless-isolation-2.4');
                for (var j=0; j<radios.length; j++) {
                    if (radios[j].checked) {
                        apListInfoToSet.ifaces[i].isolation = radios[j].value;
                    }
                }
                radios = document.getElementsByName('wireless-hide-2.4');
                for (var j=0; j<radios.length; j++) {
                    if (radios[j].checked) {
                        apListInfoToSet.ifaces[i].hide = radios[j].value;
                    }
                }*/
                var encryptionSelect = document.getElementById('ap-info-public-encryption');
                apListInfoToSet.ifaces[i].encryption = encryptionSelect[encryptionSelect.selectedIndex].value;
                if (encryptionSelect[encryptionSelect.selectedIndex].value != 'open') {
                    apListInfoToSet.ifaces[i].password = document.getElementById('ap-info-public-password').value;
                }else {
                    apListInfoToSet.ifaces[i].password = '';
                }
                var table = document.getElementById('ap-info-24G');
                var channel = table.querySelector('.channel');
                apListInfoToSet.ifaces[i].channel = channel[channel.selectedIndex].value;
                var bandwidth = table.querySelector('.bandwidth');
                apListInfoToSet.ifaces[i].bandwidth = bandwidth[bandwidth.selectedIndex].value;
                apListInfoToSet.ifaces[i].hide = table.querySelector('.hideSSID').checked?'0':'1';
                /*radios = document.getElementsByName('ap-info-public-band-width-limit');
                for (var j=0; j<radios.length; j++) {
                    if (radios[j].checked) {
                        apListInfoToSet.ifaces[i].band_width_limit.enable = radios[j].value;
                        if (radios[j].value == 1) {
                            apListInfoToSet.ifaces[i].band_width_limit.upload = document.getElementById('ap-info-public-upload').value;
                            apListInfoToSet.ifaces[i].band_width_limit.download = document.getElementById('ap-info-public-download').value;
                        }else {
                            apListInfoToSet.ifaces[i].band_width_limit.upload = '';
                            apListInfoToSet.ifaces[i].band_width_limit.download = '';
                        }
                    }
                }
*/
                var apInfoSelect = document.getElementById('ap-info-select');
                apInfoSelect.selectedIndex = 0;
                if (apListInfoToSet.ifaces[i].ssid==null||apListInfoToSet.ifaces[i].ssid==''){
                    changeApInfo();
                    text.innerText = '<%:Please input 2.4g network SSID!%>！';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('ap-info-public-ssid2');
                    return;
                }else if (strlen(apListInfoToSet.ifaces[i].ssid)>32){
                    changeApInfo();
                    text.innerText = '<%:The SSID character length cannot be more than 32 bits!%>';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('ap-info-public-ssid2');
                    return;
                }
                if (apListInfoToSet.ifaces[i].encryption!='open'){
                    if (apListInfoToSet.ifaces[i].password.length<8){
                        changeApInfo();
                        text.innerText = '<%:The password length is no less than 8 bits!%>';
                        err.style.visibility = 'visible';
                        errTipDoc = document.getElementById('ap-info-public-password');
                        return;
                    }
                    if (apListInfoToSet.ifaces[i].password != check(apListInfoToSet.ifaces[i].password)){
                        changeApInfo();
                        text.innerText = '<%:password contain invalid character%>';
                        err.style.visibility = 'visible';
                        errTipDoc = document.getElementById('ap-info-public-password');
                        return;
                    }
                }

                var publicTable = document.getElementById('ap-info-public-kick');
                apListInfoToSet.ifaces[i].enable_prevent = publicTable.querySelector('.enable_prevent').checked?'1':'0';
                apListInfoToSet.ifaces[i].sta_min_dbm = publicTable.querySelector('.sta_min_dbm').value;
                apListInfoToSet.ifaces[i].enable_kick = publicTable.querySelector('.enable_kick').checked?'1':'0';
                apListInfoToSet.ifaces[i].weak_sta_signal = publicTable.querySelector('.weak_sta_signal').value;
                if(checkKick(apListInfoToSet.ifaces[i],publicTable)){
                    return;
                }

            } else if(apListInfoToSet.ifaces[i].band == 1 ) {
                var radios;
                radios = document.getElementsByName('wireless-status-5');
                for (var j=0; j<radios.length; j++) {
                    if (radios[j].checked) {
                        apListInfoToSet.ifaces[i].enable = radios[j].value;
                    }
                }
                apListInfoToSet.ifaces[i].ssid = document.getElementById('ap-info-public-ssid5').value;
                /*radios = document.getElementsByName('wireless-isolation-5');
                for (var j=0; j<radios.length; j++) {
                    if (radios[j].checked) {
                        apListInfoToSet.ifaces[i].isolation = radios[j].value;
                    }
                }
                radios = document.getElementsByName('wireless-hide-5');
                for (var j=0; j<radios.length; j++) {
                    if (radios[j].checked) {
                        apListInfoToSet.ifaces[i].hide = radios[j].value;
                    }
                }*/
                var encryptionSelect = document.getElementById('ap-info-public-encryption-5');
                apListInfoToSet.ifaces[i].encryption = encryptionSelect[encryptionSelect.selectedIndex].value;
                if (encryptionSelect[encryptionSelect.selectedIndex].value != 'open') {
                    apListInfoToSet.ifaces[i].password = document.getElementById('ap-info-public-5-password').value;
                }else {
                    apListInfoToSet.ifaces[i].password = '';
                }
                var table = document.getElementById('ap-info-5G');
                var channel = table.querySelector('.channel-5');
                apListInfoToSet.ifaces[i].channel = channel[channel.selectedIndex].value;
                var bandwidth = table.querySelector('.bandwidth-5');
                apListInfoToSet.ifaces[i].bandwidth = bandwidth[bandwidth.selectedIndex].value;
                apListInfoToSet.ifaces[i].hide = table.querySelector('.hideSSID-5').checked?'0':'1';
                /*radios = document.getElementsByName('ap-info-band-width-limit-5');
                for (var j=0; j<radios.length; j++) {
                    if (radios[j].checked) {
                        apListInfoToSet.ifaces[i].band_width_limit.enable = radios[j].value;
                        if (radios[j].value == 1) {
                            apListInfoToSet.ifaces[i].band_width_limit.upload = document.getElementById('ap-upload').value;
                            apListInfoToSet.ifaces[i].band_width_limit.download = document.getElementById('ap-download').value;
                        }else {
                            apListInfoToSet.ifaces[i].band_width_limit.upload = '';
                            apListInfoToSet.ifaces[i].band_width_limit.download = '';
                        }
                    }
                }*/

                var apInfoSelect = document.getElementById('ap-info-select');
                apInfoSelect.selectedIndex = 1;
                if (apListInfoToSet.ifaces[i].ssid==null||apListInfoToSet.ifaces[i].ssid==''){
                    changeApInfo();
                    text.innerText = '<%:Please input 5g network SSID!%>！';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('ap-info-public-ssid5');
                    return;
                }else if (strlen(apListInfoToSet.ifaces[i].ssid)>32){
                    changeApInfo();
                    text.innerText = '<%:The SSID character length cannot be more than 32 bits!%>';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('ap-info-public-ssid5');
                    return;
                }
                if (apListInfoToSet.ifaces[i].encryption!='open'){
                    if (apListInfoToSet.ifaces[i].password.length<8){
                        changeApInfo();
                        text.innerText = '<%:The password length is no less than 8 bits!%>';
                        err.style.visibility = 'visible';
                        errTipDoc = document.getElementById('ap-info-public-5-password');
                        return;
                    }
                    if (apListInfoToSet.ifaces[i].password != check(apListInfoToSet.ifaces[i].password)){
                        changeApInfo();
                        text.innerText = '<%:password contain invalid character%>';
                        err.style.visibility = 'visible';
                        errTipDoc = document.getElementById('ap-info-public-5-password');
                        return;
                    }
                }

                var publicTable = document.getElementById('ap-info-public-kick');
                apListInfoToSet.ifaces[i].enable_prevent = publicTable.querySelector('.enable_prevent').checked?'1':'0';
                apListInfoToSet.ifaces[i].sta_min_dbm = publicTable.querySelector('.sta_min_dbm').value;
                apListInfoToSet.ifaces[i].enable_kick = publicTable.querySelector('.enable_kick').checked?'1':'0';
                apListInfoToSet.ifaces[i].weak_sta_signal = publicTable.querySelector('.weak_sta_signal').value;
                if(checkKick(apListInfoToSet.ifaces[i],publicTable)){
                    return;
                }

                if(dualEnable == 1){
                    for (var j=0; j<apListInfoToSet.ifaces.length; j++) {
                        if (apListInfoToSet.ifaces[j].band == 0) {
                            $.extend(apListInfoToSet.ifaces[j],apListInfoToSet.ifaces[i]);
                            apListInfoToSet.ifaces[j].band = 0;
                            var channel = table.querySelector('.channel');
                            apListInfoToSet.ifaces[j].channel = channel[channel.selectedIndex].value;
                            var bandwidth = table.querySelector('.bandwidth');
                            apListInfoToSet.ifaces[j].bandwidth = bandwidth[bandwidth.selectedIndex].value;
                        }
                    }
                }
            }
        }
        if (name==null||name==''){
            text.innerText = '<%:Please input AP name!%>';
            err.style.visibility = 'visible';
            errTipDoc = document.getElementById('ap-info-public-name');
            return;
        } else if (strlen(name)>45) {
            text.innerText = '<%:The AP name cannot be more than 45 characters!%>';
            err.style.visibility = 'visible';
            errTipDoc = document.getElementById('ap-info-public-name');
            return;
        }
        if (ap_alive_time<20||ap_alive_time>80||ap_alive_time.search(/\D/g) != -1){
            text.innerText = '<%:The ap_alive_time limit is 20-80 seconds!%>';
            err.style.visibility = 'visible';
            errTipDoc = document.getElementById('apAliveTime');
            return;
        }
        var params = {'macs':mac, 'led':led, 'ifaces':apListInfoToSet.ifaces, 'name':name,
            'ap_alive_time':ap_alive_time};
        console.log("set_AP",params);
        document.getElementById('setApInfoBtn').disabled = true;
        document.getElementById("waiting").style.display = '';
        XHR.post('<%=luci.dispatcher.build_url("admin", "ap","set_ap")%>', params,
            function(x, result) {
                console.log(result);
                document.getElementById('setApInfoBtn').disabled = false;
                showGroupInfo(apInfoGroupIndex);
                var err = document.getElementById('Error');
                var text = err.getElementsByTagName('span')[0];
                if(result==null){
                    text.innerText = "<%:router connection failure%>";
                    err.style.visibility = 'visible';
                    document.getElementById("waiting").style.display = 'none';
                }else if(result.code == 0){
                    setTimeout(function(){
                        showGroupInfo(apInfoGroupIndex);
                        document.getElementById("waiting").style.display = 'none';
                        document.getElementById('ap-infos').style.display = 'none';
                        document.getElementById('group-info').style.display = '';
                        text.innerText = '<%:modified%>';
                        err.style.visibility = 'visible';
                        },2000);
                }else {
                    text.innerText = result.msg;
                    err.style.visibility = 'visible';
                    document.getElementById("waiting").style.display = 'none';
                }
            });
    }

    function importConfig() {
        var file = document.getElementById('fileld').files[0];
        var fd = new FormData();
        fd.append("archive",file);
        if(file==null||file==undefined||file==""){
            var err = document.getElementById('Error');
            var text = err.getElementsByTagName('span')[0];
            text.innerText = '<%:Please select loadconfig file%>！';
            err.style.visibility = 'visible';
            return;
        }
        console.log(fd);
        XHR.upload('<%=luci.dispatcher.build_url("admin", "ap","import_ap_group_config")%>', fd, function (x, result) {
            console.log(result);
            hideParts(['import-config-div']);
            if (result==null){
                var err = document.getElementById('Error');
                var text = err.getElementsByTagName('span')[0];
                text.innerText = "<%:router connection failure%>";
                err.style.visibility = 'visible';
            }else if (result.code == 0) {
                var err = document.getElementById('Error');
                var text = err.getElementsByTagName('span')[0];
                text.innerText = '<%:import successfully%>';
                err.style.visibility = 'visible';
                getApGroups();
            } else {
                var err = document.getElementById('Error');
                var text = err.getElementsByTagName('span')[0];
                text.innerText = result.msg;
                err.style.visibility = 'visible';
            }
        }, function (x) {
            console.log(x);
        });
    }

    // button functions
    function newGroup() {
        document.getElementById('groups-info').style.display = 'none';
        document.getElementById('new-group').style.display = '';
        document.getElementById('group-name').value = '';
        document.getElementById('group-name').focus();
        document.getElementById('ssid').value = '';
        document.getElementById('encryption').selectedIndex = 0;
        document.getElementById('password').value = '';
        document.getElementById('encryption-password').style.display = 'none';
        var radio24g = document.getElementsByName('wireless-status');
        radio24g[0].checked = 'true';
        var radio5g = document.getElementsByName('new-wireless-status-5');
        radio5g[0].checked = 'true';

        document.getElementById('ssid-5').value = '';
        document.getElementById('encryption-5').selectedIndex = 0;
        document.getElementById('password-5').value = '';
        document.getElementById('encryption-5-password').style.display = 'none';
        var table = document.querySelector('#new-group table');
        table.querySelector('.channel').selectedIndex = 0;
        table.querySelector('.bandwidth').selectedIndex = 0;
        table.querySelector('.channel-5').selectedIndex = 0;
        var bandwidth = table.querySelector('.bandwidth-5');
        if (bandwidth.length == 1){
            bandwidth.options[1] = new Option('40MHZ','VHT40');
            bandwidth.options[2] = new Option('80MHZ','VHT80');
        }
        bandwidth.selectedIndex = 2;
        table.querySelector('.enable_prevent').checked = false;
        changeStatus({checked: false}, 'new-group', 'sta_min_dbm');
        table.querySelector('.enable_kick').checked = false;
        changeStatus({checked: false}, 'new-group', 'weak_sta_signal');
    }

    function delGroup() {
        var index = [];
        for (var i=1; i<=apGroups.length; i++) {
            var e = document.getElementById('cb-'+i);
            if (e.checked) {
                index.push(i);
            }
        }
        if (index.length == 0) {
            return;
        }
        var params = {'index':index};
        console.log(params);
        XHR.post('<%=luci.dispatcher.build_url("admin", "ap","remove_ap_group")%>', params,
            function(x, result) {
                var err = document.getElementById('Error');
                var text = err.getElementsByTagName('span')[0];
            if (result==null){
                text.innerText = "<%:router connection failure%>";
                err.style.visibility = 'visible';
            }else if(result.code == 0) {
                getApGroups();
                text.innerText = '<%:deleted%>';
                err.style.visibility = 'visible';
            }else {
                text.innerText = result.msg;
                err.style.visibility = 'visible';
            }
            });
    }

    function closeNewGroup() {
        document.getElementById('new-group').style.display = 'none';
        document.getElementById('groups-info').style.display = '';
    }

    function closeEditGroup() {
        document.getElementById('edit-group').style.display = 'none';
        document.getElementById('groups-info').style.display = '';
    }

    function showGroupInfo(index) {
        document.getElementById('changeGroup').disabled = true;
        document.getElementById('batchGroup').disabled = true;
        document.getElementById('delGroup').disabled = true;
        if (index == 0) {
            index = apInfoGroupIndex;
        }
        apInfoGroupIndex = index;
        for (var i=0; i<apGroups.length; i++) {
            if (apGroups[i].index == apInfoGroupIndex) {
                document.getElementById('group-info-group-name').innerText = apGroups[i].name+' <%:group detail list%>';
            }
        }
        var params = {'index':index};
        console.log(params);
        XHR.post('<%=luci.dispatcher.build_url("admin", "ap","get_ap_list")%>', params,
            function(x, result) {
            if (result==null){
                var err = document.getElementById('Error');
                var text = err.getElementsByTagName('span')[0];
                text.innerText = "<%:router connection failure%>";
                err.style.visibility = 'visible';
            }else if(result.code == 0) {
                console.log(result);
                apList = result.ap_list;
                var html = '<tr><td><input id="mainController" type="checkbox" onclick="choseAll()"></td><td><%:index%></td><td><%:Name%></td><td><%:model%></td><td><%:hardware version%></td><td><%:software version%></td><td><%:MAC-Address%></td><td>LED</td><td><%:status%></td><td><%:Set%></td></tr>';
                for (var i = 0; i < apList.length; i++) {
                    if (apList[i].led == '1') {
                        apList[i].led_t = '<%:ON%>';
                    } else {
                        apList[i].led_t = '<%:OFF%>';
                    }
                    if (apList[i].status == '1') {
                        apList[i].status_t = '<%:operation%>';
                    } else if (apList[i].status == 0) {
                        apList[i].status_t = '<%:offline%>';
                    } else if (apList[i].status == 2) {
                        apList[i].status_t = '<%:in setting%>';
                    } else if (apList[i].status == 3) {
                        apList[i].status_t = '<%:abnormal%>';
                    }
                    if (apList[i].status == '1') {
                        html += '<tr><td><input id="ap-cb-' + i + '" type="checkbox" onchange="apGoupDelChange(this,2)"></td><td>' + (i + 1) + '</td><td class="version-td">' + apList[i].name +
                            '</td><td>' + apList[i].model + '</td><td class="version-td">' + apList[i].hardware_version + '</td><td class="version-td">' + apList[i].firmware_version +
                            '</td><td>' + apList[i].mac + '</td><td>' + apList[i].led_t + '</td><td>' + apList[i].status_t +
                            '</td><td><button onclick="showApInfo(' + i + ')"><%:Set%></button></td></tr>';
                    } else {
                        html += '<tr><td><input id="ap-cb-' + i + '" type="checkbox" onchange="apGoupDelChange(this,2)"></td><td>' + (i + 1) + '</td><td class="version-td">' + apList[i].name +
                            '</td><td>' + apList[i].model + '</td><td class="version-td">' + apList[i].hardware_version + '</td><td class="version-td">' + apList[i].firmware_version +
                            '</td><td>' + apList[i].mac + '</td><td>' + apList[i].led_t + '</td><td>' + apList[i].status_t +
                            '</td><td><button onclick="showApInfo(' + i + ')" disabled><%:Set%></button></td></tr>';
                    }

                }
                var apListTable = document.getElementById('ap-list');
                setTableInnerHTML(apListTable, html);
                if (isRealNextPage){
                    document.getElementById('group-info').style.display = '';
                    document.getElementById('groups-info').style.display = 'none';
                }
                isRealNextPage = false;
            }
        });
    }

    function editGroupInfo(i) {
        console.log(apGroups[i].ifaces);
        var table = document.querySelector('#edit-group table');
        document.getElementById('groups-info').style.display = 'none';
        document.getElementById('edit-group').style.display = '';
        action = 1;
        editIndex = i+1;
        if (editIndex==1){
            document.getElementById('edit-group-name').disabled = true;
        }else {
            document.getElementById('edit-group-name').disabled = false;
        }
        if (apGroups[i].name != undefined) {
            document.getElementById('edit-group-name').value = apGroups[i].name;
        }else {
            document.getElementById('edit-group-name').value = '';
        }
        for (var j=0; j<apGroups[i].ifaces.length; j++) {
            if (apGroups[i].ifaces[j].band == 0) {
                var flag;
                var wirelessStatus = document.getElementsByName('edit-wireless-status');
                if (apGroups[i].ifaces[j].enable == "1") {
                    flag = 1;
                } else {
                    flag = 0;
                }
                for (var k=0; k<wirelessStatus.length; k++) {
                    if (apGroups[i].ifaces[j].enable==undefined){
                        wirelessStatus[k].checked = false;
                    }else {
                        if (wirelessStatus[k].value == flag) {
                            wirelessStatus[k].checked = true;
                        }
                    }

                }
                if (apGroups[i].ifaces[j].ssid != undefined) {
                    document.getElementById('edit-ssid').value = apGroups[i].ifaces[j].ssid;
                }else {
                    document.getElementById('edit-ssid').value = '';
                }
                /*var wirelessIsolation = document.getElementsByName('edit-wireless-isolation');
                if (apGroups[i].ifaces[j].isolation == "1") {
                    flag = 1;
                } else {
                    flag = 0;
                }
                for (var k=0; k<wirelessIsolation.length; k++) {
                    if (apGroups[i].ifaces[j].isolation==undefined){
                        wirelessIsolation[k].checked = false;
                    } else {
                        if (wirelessIsolation[k].value == flag) {
                            wirelessIsolation[k].checked = true;
                        }
                    }
                }
                */

                var editEncryption = document.getElementById('edit-encryption');
                if (apGroups[i].ifaces[j].encryption!=undefined){
                    for (var e=0; e<editEncryption.length;e++){
                        if (editEncryption[e].value==apGroups[i].ifaces[j].encryption){
                            editEncryption.selectedIndex = e;
                            break;
                        }
                    }
                } else {
                    editEncryption.selectedIndex = 0;
                }
                var channel = table.querySelector('.channel');
                if (apGroups[i].ifaces[j].channel!=undefined){
                    for (var e=0; e<channel.length;e++){
                        if (channel[e].value==apGroups[i].ifaces[j].channel){
                            channel.selectedIndex = e;
                            break;
                        }
                    }
                } else {
                    channel.selectedIndex = 0;
                }
                var bandwidth = table.querySelector('.bandwidth');
                if (apGroups[i].ifaces[j].bandwidth!=undefined){
                    for (var e=0; e<bandwidth.length;e++){
                        if (bandwidth[e].value==apGroups[i].ifaces[j].bandwidth){
                            bandwidth.selectedIndex = e;
                            break;
                        }
                    }
                } else {
                    bandwidth.selectedIndex = 0;
                }

                if (apGroups[i].ifaces[j].enable_prevent!=undefined){
                    if(apGroups[i].ifaces[j].enable_prevent=='1'){
                        table.querySelector('.enable_prevent').checked = true;
                        table.querySelector('.sta_min_dbm').disabled = false;
                        table.querySelector('.sta_min_dbm').style.color = 'black';
                    }else{
                        table.querySelector('.enable_prevent').checked = false;
                        table.querySelector('.sta_min_dbm').disabled = true;
                        table.querySelector('.sta_min_dbm').style.color = 'gray';
                    }
                }
                if (apGroups[i].ifaces[j].sta_min_dbm!=undefined){
                    table.querySelector('.sta_min_dbm').value = apGroups[i].ifaces[j].sta_min_dbm;
                }
                if (apGroups[i].ifaces[j].enable_kick!=undefined){
                    if(apGroups[i].ifaces[j].enable_kick=='1'){
                        table.querySelector('.enable_kick').checked = true;
                        table.querySelector('.weak_sta_signal').disabled = false;
                        table.querySelector('.weak_sta_signal').style.color = 'black';
                    }else{
                        table.querySelector('.enable_kick').checked = false;
                        table.querySelector('.weak_sta_signal').disabled = true;
                        table.querySelector('.weak_sta_signal').style.color = 'gray';
                    }
                }
                if (apGroups[i].ifaces[j].hide!=undefined && apGroups[i].ifaces[j].hide=='1'){
                    table.querySelector('.hideSSID').checked = false;
                }else{
                    table.querySelector('.hideSSID').checked = true;
                }
                if (apGroups[i].ifaces[j].weak_sta_signal!=undefined){
                    table.querySelector('.weak_sta_signal').value = apGroups[i].ifaces[j].weak_sta_signal;
                }

                if (apGroups[i].ifaces[j].encryption==editEncryption[1].value){
                    document.getElementById('edit-encryption-password').style.display = '';
                    document.getElementById('edit-password').value = apGroups[i].ifaces[j].password==undefined?'':apGroups[i].ifaces[j].password;
                }else {
                    document.getElementById('edit-encryption-password').style.display = 'none';
                    document.getElementById('edit-password').value = '';
                }
                var bandWidthLimit = document.getElementsByName('edit-band-width-limit');
                if (apGroups[i].ifaces[j].band_width_limit.enable == "1") {
                    flag = 1;
                } else {
                    flag = 0;
                }
                for (var k=0; k<bandWidthLimit.length; k++) {
                    if (bandWidthLimit[k].value == flag) {
                        bandWidthLimit[k].checked = true;
                        if (bandWidthLimit[k].value == 1) {
                            document.getElementById('edit-band-width-limit-upload').style.display = '';
                            document.getElementById('edit-band-width-limit-download').style.display = '';
                            document.getElementById('edit-upload').value = apGroups[i].ifaces[j].band_width_limit.upload==undefined?'':apGroups[i].ifaces[j].band_width_limit.upload;
                            document.getElementById('edit-download').value = apGroups[i].ifaces[j].band_width_limit.download==undefined?'':apGroups[i].ifaces[j].band_width_limit.download;
                        } else {
                            document.getElementById('edit-band-width-limit-upload').style.display = 'none';
                            document.getElementById('edit-band-width-limit-download').style.display = 'none';
                            document.getElementById('edit-upload').value = '';
                            document.getElementById('edit-download').value = '';
                        }
                    }
                }
            } else {
                var flag;
                var wirelessStatus = document.getElementsByName('edit-wireless-status-5');
                if (apGroups[i].ifaces[j].enable == "1") {
                    flag = 1;
                } else {
                    flag = 0;
                }
                for (var k=0; k<wirelessStatus.length; k++) {
                    if (apGroups[i].ifaces[j].enable==undefined){
                        wirelessStatus[k].checked = false;
                    }else {
                        if (wirelessStatus[k].value == flag) {
                            wirelessStatus[k].checked = true;
                        }
                    }
                }
                if (apGroups[i].ifaces[j].ssid != undefined) {
                    document.getElementById('edit-ssid-5').value = apGroups[i].ifaces[j].ssid;
                }else {
                    document.getElementById('edit-ssid-5').value = '';
                }
                /*var wirelessIsolation = document.getElementsByName('edit-wireless-isolation-5');
                if (apGroups[i].ifaces[j].isolation == "1") {
                    flag = 1;
                } else {
                    flag = 0;
                }
                for (var k=0; k<wirelessIsolation.length; k++) {
                    if (apGroups[i].ifaces[j].isolation==undefined){
                        wirelessIsolation[k].checked = false;
                    } else{
                        if (wirelessIsolation[k].value == flag) {
                            wirelessIsolation[k].checked = true;
                        }
                    }
                }
                var wirelessHide = document.getElementsByName('edit-wireless-hide-5');
                if (apGroups[i].ifaces[j].hide == "1") {
                    flag = 1;
                } else {
                    flag = 0;
                }
                for (var k=0; k<wirelessHide.length; k++) {
                    if (apGroups[i].ifaces[j].hide==undefined) {
                        wirelessHide[k].checked = false;
                    }else {
                        if (wirelessHide[k].value == flag) {
                            wirelessHide[k].checked = true;
                        }
                    }
                }*/
                var editEncryption = document.getElementById('edit-encryption-5');
                if (apGroups[i].ifaces[j].encryption!=undefined){
                    for (var e=0; e<editEncryption.length;e++){
                        if (editEncryption[e].value==apGroups[i].ifaces[j].encryption){
                            editEncryption.selectedIndex = e;
                            break;
                        }
                    }
                } else {
                    editEncryption.selectedIndex = 0;
                }
                var channel = table.querySelector('.channel-5');
                if (apGroups[i].ifaces[j].channel!=undefined){
                    for (var e=0; e<channel.length;e++){
                        if (channel[e].value==apGroups[i].ifaces[j].channel){
                            channel.selectedIndex = e;
                            break;
                        }
                    }
                } else {
                    channel.selectedIndex = 0;
                }
                var bandwidth = table.querySelector('.bandwidth-5');
                if (apGroups[i].ifaces[j].bandwidth!=undefined){
                    for (var e=0; e<bandwidth.length;e++){
                        if (bandwidth[e].value==apGroups[i].ifaces[j].bandwidth){
                            bandwidth.selectedIndex = e;
                            break;
                        }
                    }
                } else {
                    bandwidth.selectedIndex = 2;
                }
                channel165(channel, table.id);

                if (apGroups[i].ifaces[j].enable_prevent!=undefined){
                    if(apGroups[i].ifaces[j].enable_prevent=='1'){
                        table.querySelector('.enable_prevent').checked = true;
                        table.querySelector('.sta_min_dbm').disabled = false;
                        table.querySelector('.sta_min_dbm').style.color = 'black';
                    }else{
                        table.querySelector('.enable_prevent').checked = false;
                        table.querySelector('.sta_min_dbm').disabled = true;
                        table.querySelector('.sta_min_dbm').style.color = 'gray';
                    }
                }
                if (apGroups[i].ifaces[j].sta_min_dbm!=undefined){
                    table.querySelector('.sta_min_dbm').value = apGroups[i].ifaces[j].sta_min_dbm;
                }
                if (apGroups[i].ifaces[j].enable_kick!=undefined){
                    if(apGroups[i].ifaces[j].enable_kick=='1'){
                        table.querySelector('.enable_kick').checked = true;
                        table.querySelector('.weak_sta_signal').disabled = false;
                        table.querySelector('.weak_sta_signal').style.color = 'black';
                    }else{
                        table.querySelector('.enable_kick').checked = false;
                        table.querySelector('.weak_sta_signal').disabled = true;
                        table.querySelector('.weak_sta_signal').style.color = 'gray';
                    }
                }
                if (apGroups[i].ifaces[j].hide!=undefined && apGroups[i].ifaces[j].hide=='1'){
                    table.querySelector('.hideSSID-5').checked = false;
                }else{
                    table.querySelector('.hideSSID-5').checked = true;
                }
                if (apGroups[i].ifaces[j].weak_sta_signal!=undefined){
                    table.querySelector('.weak_sta_signal').value = apGroups[i].ifaces[j].weak_sta_signal;
                }

                if (apGroups[i].ifaces[j].encryption==editEncryption[1].value){
                    document.getElementById('edit-encryption-5-password').style.display = '';
                    document.getElementById('edit-password-5').value = apGroups[i].ifaces[j].password==undefined?'':apGroups[i].ifaces[j].password;
                } else {
                    document.getElementById('edit-encryption-5-password').style.display = 'none';
                    document.getElementById('edit-password-5').value = '';
                }
                /*var bandWidthLimit = document.getElementsByName('edit-band-width-limit-5');
                if (apGroups[i].ifaces[j].band_width_limit.enable == "1") {
                    flag = 1;
                } else {
                    flag = 0;
                }
                for (var k=0; k<bandWidthLimit.length; k++) {
                    if (bandWidthLimit[k].value == flag) {
                        bandWidthLimit[k].checked = true;
                        if (bandWidthLimit[k].value == 1) {
                            document.getElementById('edit-band-width-limit-5-upload').style.display = '';
                            document.getElementById('edit-band-width-limit-5-download').style.display = '';
                            document.getElementById('edit-upload-5').value = apGroups[i].ifaces[j].band_width_limit.upload==undefined?'':apGroups[i].ifaces[j].band_width_limit.upload;
                            document.getElementById('edit-download-5').value = apGroups[i].ifaces[j].band_width_limit.download==undefined?'':apGroups[i].ifaces[j].band_width_limit.download;
                        } else {
                            document.getElementById('edit-band-width-limit-5-upload').style.display = 'none';
                            document.getElementById('edit-band-width-limit-5-download').style.display = 'none';
                            document.getElementById('edit-upload-5').value = '';
                            document.getElementById('edit-download-5').value = '';
                        }
                    }
                }*/
            }
        }
    }

    //下拉切换2.4G/5G的内容
    function changebatchInfo() {
        var batchSelect = document.getElementById("batch-edit-group-info-select");
        if (batchSelect[batchSelect.selectedIndex].value == 0){
            document.getElementById('batch-edit-group-ap-info-24G').style.display = '';
            document.getElementById('batch-edit-group-ap-info-5G').style.display = 'none';
        }else{
            document.getElementById('batch-edit-group-ap-info-24G').style.display = 'none';
            document.getElementById('batch-edit-group-ap-info-5G').style.display = '';
        }
    }
    function changeApInfo() {
        var apInfoSelect = document.getElementById('ap-info-select');
        if (apInfoSelect[apInfoSelect.selectedIndex].value == 0) {
            document.getElementById('ap-info-24G').style.display = '';
            document.getElementById('ap-info-5G').style.display = 'none';
        } else {
            document.getElementById('ap-info-24G').style.display = 'none';
            document.getElementById('ap-info-5G').style.display = '';
        }
    }

    function showApInfo(i) {
        apInfoIndex = i;
        document.getElementById('group-info').style.display = 'none';
        document.getElementById('ap-infos').style.display = '';
        var apInfoSelect = document.getElementById('ap-info-select');
        apInfoSelect.selectedIndex = 0;
        if(dualEnable == 1){
            apInfoSelect.selectedIndex = 1;
        }
        changeApInfo();
        for (var j=0; j<apList[i].ifaces.length; j++) {
            if (apList[i].ifaces[j].band == 0) {
                //无线状态
                var radiosWirelessStatus2 = document.getElementsByName('wireless-status-2.4');
                for (var k=0; k<radiosWirelessStatus2.length; k++) {
                    if (apList[i].ifaces[j].enable!=undefined){
                        if (radiosWirelessStatus2[k].value == apList[i].ifaces[j].enable) {
                            radiosWirelessStatus2[k].checked = true;
                        }
                    } else {
                        radiosWirelessStatus2[k].checked = false;
                    }

                }
                var apInfoPublicEncryptionSelect = document.getElementById('ap-info-public-encryption');
                if (apList[i].ifaces[j].encryption!=undefined){
                    for (var k=0; k<apInfoPublicEncryptionSelect.options.length; k++) {
                        if (apInfoPublicEncryptionSelect[k].value == apList[i].ifaces[j].encryption) {
                            apInfoPublicEncryptionSelect.selectedIndex = k;
                            changeEncryption('ap-info-public-encryption');
                        }
                    }
                } else {
                    apInfoPublicEncryptionSelect.selectedIndex = 0;
                    changeEncryption('ap-info-public-encryption');
                }
                if (apList[i].ifaces[j].ssid != undefined) {
                    document.getElementById('ap-info-public-ssid2').value = apList[i].ifaces[j].ssid;
                }else {
                    document.getElementById('ap-info-public-ssid2').value = '';
                }

               /* var WirelessHide2 = document.getElementsByName('wireless-hide-2.4');
                for (var b=0; b<WirelessHide2.length; b++) {
                    if (apList[i].ifaces[j].hide!=undefined) {
                        if (WirelessHide2[b].value == apList[i].ifaces[j].hide) {
                            WirelessHide2[b].checked = true;
                        }
                    }else {
                        WirelessHide2[b].checked = false;
                    }
                }
                var radiosWirelessIsolation2 = document.getElementsByName('wireless-isolation-2.4');
                for (var c=0; c<radiosWirelessIsolation2.length; c++) {
                    if (apList[i].ifaces[j].isolation!=undefined){
                        if (radiosWirelessIsolation2[c].value == apList[i].ifaces[j].isolation) {
                            radiosWirelessIsolation2[c].checked = true;
                        }
                    } else {
                        radiosWirelessIsolation2[c].checked = false;
                    }

                }*/

               /* var bandWidthLimit = document.getElementsByName('ap-info-public-band-width-limit');
                for (var e=0; e<bandWidthLimit.length; e++) {
                    if (apList[i].ifaces[j].band_width_limit.enable!=undefined){
                        if (bandWidthLimit[e].value == apList[i].ifaces[j].band_width_limit.enable) {
                            bandWidthLimit[e].checked = true;
                        }
                    } else {
                        bandWidthLimit[e].checked = false;
                    }

                }
                if (apList[i].ifaces[j].band_width_limit.enable=="1") {
                    document.getElementById('ap-info-public-band-width-limit-upload').style.display = '';
                    document.getElementById('ap-info-public-band-width-limit-download').style.display = '';
                }else {
                    document.getElementById('ap-info-public-band-width-limit-upload').style.display = 'none';
                    document.getElementById('ap-info-public-band-width-limit-download').style.display = 'none';
                }*/
                if (apList[i].ifaces[j].password != undefined) {
                    document.getElementById('ap-info-public-password').value = apList[i].ifaces[j].password;
                }else {
                    document.getElementById('ap-info-public-password').value = '';
                }
                //display channel
                var table = document.getElementById('ap-info-24G');
                var channel = table.querySelector('.channel');
                if (apList[i].ifaces[j].channel != undefined) {
                    for (var k=0; k<channel.options.length; k++) {
                        if (channel[k].value == apList[i].ifaces[j].channel) {
                            channel.selectedIndex = k;
                            break;
                        }
                    }
                }else {
                    channel.selectedIndex = 0;
                }
                var bandwidth = table.querySelector('.bandwidth');
                if (apList[i].ifaces[j].bandwidth != undefined) {
                    for (var k=0; k<bandwidth.options.length; k++) {
                        if (bandwidth[k].value == apList[i].ifaces[j].bandwidth) {
                            bandwidth.selectedIndex = k;
                            break;
                        }
                    }
                }else {
                    bandwidth.selectedIndex = 0;
                }
                if (apList[i].ifaces[j].hide!=undefined && apList[i].ifaces[j].hide=='1'){
                    table.querySelector('.hideSSID').checked = false;
                }else{
                    table.querySelector('.hideSSID').checked = true;
                }
                var table5g = document.getElementById('ap-info-5G');
                var channelDual24g = table5g.querySelector('.channel');
                channelDual24g.selectedIndex = channel.selectedIndex;
                var bandwidthDual24g = table5g.querySelector('.bandwidth');
                bandwidthDual24g.selectedIndex = bandwidth.selectedIndex;
               /* if (apList[i].ifaces[j].band_width_limit.upload != undefined) {
                    document.getElementById('ap-info-public-upload').value = apList[i].ifaces[j].band_width_limit.upload;
                }else {
                    document.getElementById('ap-info-public-upload').value = '';
                }
                if (apList[i].ifaces[j].band_width_limit.download != undefined) {
                    document.getElementById('ap-info-public-download').value = apList[i].ifaces[j].band_width_limit.download;
                }else {
                    document.getElementById('ap-info-public-download').value = '';
                }*/

                var publicTable = document.getElementById('ap-info-public-kick');
                if (apList[i].ifaces[j].enable_prevent!=undefined){
                    if(apList[i].ifaces[j].enable_prevent=='1'){
                        publicTable.querySelector('.enable_prevent').checked = true;
                        publicTable.querySelector('.sta_min_dbm').disabled = false;
                        publicTable.querySelector('.sta_min_dbm').style.color = 'black';
                    }else{
                        publicTable.querySelector('.enable_prevent').checked = false;
                        publicTable.querySelector('.sta_min_dbm').disabled = true;
                        publicTable.querySelector('.sta_min_dbm').style.color = 'gray';
                    }
                }
                if (apList[i].ifaces[j].sta_min_dbm!=undefined){
                    publicTable.querySelector('.sta_min_dbm').value = apList[i].ifaces[j].sta_min_dbm;
                }
                if (apList[i].ifaces[j].enable_kick!=undefined){
                    if(apList[i].ifaces[j].enable_kick=='1'){
                        publicTable.querySelector('.enable_kick').checked = true;
                        publicTable.querySelector('.weak_sta_signal').disabled = false;
                        publicTable.querySelector('.weak_sta_signal').style.color = 'black';
                    }else{
                        publicTable.querySelector('.enable_kick').checked = false;
                        publicTable.querySelector('.weak_sta_signal').disabled = true;
                        publicTable.querySelector('.weak_sta_signal').style.color = 'gray';
                    }
                }
                if (apList[i].ifaces[j].weak_sta_signal!=undefined){
                    publicTable.querySelector('.weak_sta_signal').value = apList[i].ifaces[j].weak_sta_signal;
                }

            } else {
                var radiosWirelessStatus5 = document.getElementsByName('wireless-status-5');
                console.log('in');
                for (var k=0; k<radiosWirelessStatus5.length; k++) {
                    if (apList[i].ifaces[j].enable!=undefined) {
                        if (radiosWirelessStatus5[k].value == apList[i].ifaces[j].enable) {
                            radiosWirelessStatus5[k].checked = true;
                        }
                    }else {
                        radiosWirelessStatus5[k].checked = false;
                    }

                }
                var apInfoPublicEncryptionSelect = document.getElementById('ap-info-public-encryption-5');
                if (apList[i].ifaces[j].encryption!=undefined){
                    for (var k=0; k<apInfoPublicEncryptionSelect.options.length; k++) {
                        if (apInfoPublicEncryptionSelect[k].value == apList[i].ifaces[j].encryption) {
                            apInfoPublicEncryptionSelect.selectedIndex = k;
                            changeEncryption('ap-info-public-encryption-5');
                        }
                    }
                } else {
                    apInfoPublicEncryptionSelect.selectedIndex = 0;
                    changeEncryption('ap-info-public-encryption-5');
                }
                var table = document.getElementById('ap-info-5G');
                var channel = table.querySelector('.channel-5');
                if (apList[i].ifaces[j].channel != undefined) {
                    for (var k=0; k<channel.options.length; k++) {
                        if (channel[k].value == apList[i].ifaces[j].channel) {
                            channel.selectedIndex = k;
                            break;
                        }
                    }
                }else {
                    channel.selectedIndex = 0;
                }
                var bandwidth = table.querySelector('.bandwidth-5');
                if (apList[i].ifaces[j].bandwidth != undefined) {
                    for (var k=0; k<bandwidth.options.length; k++) {
                        if (bandwidth[k].value == apList[i].ifaces[j].bandwidth) {
                            bandwidth.selectedIndex = k;
                            break;
                        }
                    }
                }else {
                    bandwidth.selectedIndex = 2;
                }
                channel165(channel, table.id);
                if (apList[i].ifaces[j].hide!=undefined && apList[i].ifaces[j].hide=='1'){
                    table.querySelector('.hideSSID-5').checked = false;
                }else{
                    table.querySelector('.hideSSID-5').checked = true;
                }

                /*var radiosWirelessIsolation5 = document.getElementsByName('wireless-isolation-5');
                for (var d=0; d<radiosWirelessIsolation5.length; d++) {
                    if (apList[i].ifaces[j].isolation!=undefined) {
                        if (radiosWirelessIsolation5[d].value == apList[i].ifaces[j].isolation) {
                            radiosWirelessIsolation5[d].checked = true;
                        }
                    }else {
                        radiosWirelessIsolation5[d].checked = false;
                    }
                }
                var WirelessHide5 = document.getElementsByName('wireless-hide-5');
                for (var k=0; k<WirelessHide5.length; k++) {
                    if (apList[i].ifaces[j].hide!=undefined) {
                        if (WirelessHide5[k].value == apList[i].ifaces[j].hide) {
                            WirelessHide5[k].checked = true;
                        }
                    }else {
                        WirelessHide5[k].checked = false;
                    }
                }*/
                /*var bandWidthLimit = document.getElementsByName('ap-info-band-width-limit-5');
                for (var e=0; e<bandWidthLimit.length; e++) {
                    if (apList[i].ifaces[j].band_width_limit.enable!=undefined) {
                        if (bandWidthLimit[e].value == apList[i].ifaces[j].band_width_limit.enable) {
                            bandWidthLimit[e].checked = true;
                        }
                    }else {
                        bandWidthLimit[e].checked = false;
                    }
                }

                if (apList[i].ifaces[j].band_width_limit.enable=="1") {
                    document.getElementById('ap-band-width-limit-upload').style.display = '';
                    document.getElementById('ap-band-width-limit-download').style.display = '';
                }else {
                    document.getElementById('ap-band-width-limit-upload').style.display = 'none';
                    document.getElementById('ap-band-width-limit-download').style.display = 'none';
                }*/

                if (apList[i].ifaces[j].ssid != undefined) {
                    document.getElementById('ap-info-public-ssid5').value = apList[i].ifaces[j].ssid;
                }else {
                    document.getElementById('ap-info-public-ssid5').value = '';
                }
                if (apList[i].ifaces[j].password != undefined) {
                    document.getElementById('ap-info-public-5-password').value = apList[i].ifaces[j].password;
                }else {
                    document.getElementById('ap-info-public-5-password').value = '';
                }
                /*if (apList[i].ifaces[j].band_width_limit.upload != undefined) {
                    document.getElementById('ap-upload').value = apList[i].ifaces[j].band_width_limit.upload;
                }else {
                    document.getElementById('ap-upload').value = '';
                }
                if (apList[i].ifaces[j].band_width_limit.download != undefined) {
                    document.getElementById('ap-download').value = apList[i].ifaces[j].band_width_limit.download;
                }else {
                    document.getElementById('ap-download').value = '';
                }*/

                var publicTable = document.getElementById('ap-info-public-kick');
                if (apList[i].ifaces[j].enable_prevent!=undefined){
                    if(apList[i].ifaces[j].enable_prevent=='1'){
                        publicTable.querySelector('.enable_prevent').checked = true;
                        publicTable.querySelector('.sta_min_dbm').disabled = false;
                        publicTable.querySelector('.sta_min_dbm').style.color = 'black';
                    }else{
                        publicTable.querySelector('.enable_prevent').checked = false;
                        publicTable.querySelector('.sta_min_dbm').disabled = true;
                        publicTable.querySelector('.sta_min_dbm').style.color = 'gray';
                    }
                }
                if (apList[i].ifaces[j].sta_min_dbm!=undefined){
                    publicTable.querySelector('.sta_min_dbm').value = apList[i].ifaces[j].sta_min_dbm;
                }
                if (apList[i].ifaces[j].enable_kick!=undefined){
                    if(apList[i].ifaces[j].enable_kick=='1'){
                        publicTable.querySelector('.enable_kick').checked = true;
                        publicTable.querySelector('.weak_sta_signal').disabled = false;
                        publicTable.querySelector('.weak_sta_signal').style.color = 'black';
                    }else{
                        publicTable.querySelector('.enable_kick').checked = false;
                        publicTable.querySelector('.weak_sta_signal').disabled = true;
                        publicTable.querySelector('.weak_sta_signal').style.color = 'gray';
                    }
                }
                if (apList[i].ifaces[j].weak_sta_signal!=undefined){
                    publicTable.querySelector('.weak_sta_signal').value = apList[i].ifaces[j].weak_sta_signal;
                }

            }
        }
        console.log(apList[i].name);
        //名称
        if (apList[i].name != undefined) {
            document.getElementById('ap-info-public-name').value = apList[i].name;
        }
        //AP保活时间
        if (apList[i].ap_alive_time != undefined) {
            document.getElementById('apAliveTime').value = apList[i].ap_alive_time;
        }
       /* //客户端保活时间
        if (apList[i].client_alive_time != undefined) {
            document.getElementById('clientAliveTime').value = apList[i].client_alive_time;
        }
        //客户端闲置时间
        if (apList[i].client_idle_time !=undefined){
            document.getElementById("clientIdleTime").value = apList[i].client_idle_time
        }*/
        //LED
        var radios = document.getElementsByName('led-enable');
        for (var j=0; j<radios.length; j++) {
            if (radios[j].value == apList[i].led) {
                radios[j].checked = true;
            }
        }
    }
    // page functions
    function changeEncryption(selectId) {
        var select = document.getElementById(selectId);
        if (select[select.selectedIndex].value != 'open') {
            document.getElementById(selectId+'-password').style.display = '';
        } else {
            document.getElementById(selectId+'-password').style.display = 'none';
        }
    }
    function enableBandWidthLimit(band) {
        if (band == '2.4G') {
            var radios = document.getElementsByName('band-width-limit');
            for (var i=0; i<radios.length; i++) {
                if (radios[i].checked) {
                    if (radios[i].value == 1) {
                        document.getElementById('band-width-limit-upload').style.display = '';
                        document.getElementById('band-width-limit-download').style.display = '';
                    } else {
                        document.getElementById('band-width-limit-upload').style.display = 'none';
                        document.getElementById('band-width-limit-download').style.display = 'none';
                    }
                }
            }
        } else if (band == '5G') {
            var radios = document.getElementsByName('band-width-limit-5');
            for (var i=0; i<radios.length; i++) {
                if (radios[i].checked) {
                    if (radios[i].value == 1) {
                        document.getElementById('band-width-limit-5-upload').style.display = '';
                        document.getElementById('band-width-limit-5-download').style.display = '';
                    } else {
                        document.getElementById('band-width-limit-5-upload').style.display = 'none';
                        document.getElementById('band-width-limit-5-download').style.display = 'none';
                    }
                }
            }
        } else if (band == 'edit-2.4G') {
            var radios = document.getElementsByName('edit-band-width-limit');
            for (var i=0; i<radios.length; i++) {
                if (radios[i].checked) {
                    if (radios[i].value == 1) {
                        document.getElementById('edit-band-width-limit-upload').style.display = '';
                        document.getElementById('edit-band-width-limit-download').style.display = '';
                    } else {
                        document.getElementById('edit-band-width-limit-upload').style.display = 'none';
                        document.getElementById('edit-band-width-limit-download').style.display = 'none';
                    }
                }
            }
        } else if (band == 'edit-5G') {
            var radios = document.getElementsByName('edit-band-width-limit-5');
            for (var i=0; i<radios.length; i++) {
                if (radios[i].checked) {
                    if (radios[i].value == 1) {
                        document.getElementById('edit-band-width-limit-5-upload').style.display = '';
                        document.getElementById('edit-band-width-limit-5-download').style.display = '';
                    } else {
                        document.getElementById('edit-band-width-limit-5-upload').style.display = 'none';
                        document.getElementById('edit-band-width-limit-5-download').style.display = 'none';
                    }
                }
            }
        } else if (band == 'ap-info-24G') {
            var radios = document.getElementsByName('ap-info-public-band-width-limit');
            for (var i=0; i<radios.length; i++) {
                if (radios[i].checked) {
                    if (radios[i].value == 1) {
                        document.getElementById('ap-info-public-band-width-limit-upload').style.display = '';
                        document.getElementById('ap-info-public-band-width-limit-download').style.display = '';
                    } else {
                        document.getElementById('ap-info-public-band-width-limit-upload').style.display = 'none';
                        document.getElementById('ap-info-public-band-width-limit-download').style.display = 'none';
                    }
                }
            }
        } else if (band == 'ap-info-5G') {
            var radios = document.getElementsByName('ap-info-band-width-limit-5');
            for (var i=0; i<radios.length; i++) {
                if (radios[i].checked) {
                    if (radios[i].value == 1) {
                        document.getElementById('ap-band-width-limit-upload').style.display = '';
                        document.getElementById('ap-band-width-limit-download').style.display = '';
                    } else {
                        document.getElementById('ap-band-width-limit-upload').style.display = 'none';
                        document.getElementById('ap-band-width-limit-download').style.display = 'none';
                    }
                }
            }
        }else if (band == 'batch-info-2.4G') {
            var radios = document.getElementsByName('batch-edit-group-band-width-limit-2.4');
            for (var i=0; i<radios.length; i++) {
                if (radios[i].checked) {
                    if (radios[i].value == 1) {
                        document.getElementById('batch-edit-group-band-width-limit-upload-2.4').style.display = '';
                        document.getElementById('batch-edit-group-band-width-limit-download-2.4').style.display = '';
                    } else {
                        document.getElementById('batch-edit-group-upload-2.4').style.display = 'none';
                        document.getElementById('batch-edit-group-band-width-limit-download-2.4').style.display = 'none';
                    }
                }
            }
        }
        else if (band == 'batch-info-5G') {
            var radios = document.getElementsByName('batch-edit-group-band-width-limit-5');
            for (var i=0; i<radios.length; i++) {
                if (radios[i].checked) {
                    if (radios[i].value == 1) {
                        document.getElementById('batch-edit-group-band-width-limit-upload-5').style.display = '';
                        document.getElementById('batch-edit-group-band-width-limit-download-5').style.display = '';
                    } else {
                        document.getElementById('batch-edit-group-band-width-limit-upload-5').style.display = 'none';
                        document.getElementById('batch-edit-group-band-width-limit-download-5').style.display = 'none';
                    }
                }
            }
        }
    }
    //带宽控制的函数
    function apInfoEnableBandWidthLimit(radioName) {
        var radios = document.getElementsByName(radioName);
        for (var i=0; i<radios.length; i++) {
            if (radios[i].checked) {
                if (radios[i].value == 1) {
                    document.getElementById(radioName+'-upload').style.display = '';
                    document.getElementById(radioName+'-download').style.display = '';
                } else {
                    document.getElementById(radioName+'-upload').style.display = 'none';
                    document.getElementById(radioName+'-download').style.display = 'none';
                }
            }
        }
    }

    function showBatchInfo() {
        var firstChoose = false;
        for (var i = 0; i < apList.length; i++) {
            if (document.getElementById('ap-cb-' + i).checked) {
                if (apList[i].status=='0'){
                    var err = document.getElementById('Error');
                    var text = err.getElementsByTagName('span')[0];
                    text.innerText = '<%:AP number%>'+' '+(i+1)+' '+'<%:is abnormal,cannot join bulk edit!%>';
                    err.style.visibility = 'visible';
                    return;
                }
                if (!firstChoose){
                    batchEditApInfoShowIndex = i;
                    firstChoose = true;
                }
            }
        }
        document.getElementById('group-info').style.display = 'none';
        document.getElementById('batch-edit-group').style.display = '';
        console.log(batchEditApInfoShowIndex);
        var batchEditSelect = document.getElementById('batch-edit-group-info-select');
        batchEditSelect.selectedIndex = 0;
        if(dualEnable == 1){
            batchEditSelect.selectedIndex = 1;
        }
        changebatchInfo();
        for (var j=0; j<apList[batchEditApInfoShowIndex].ifaces.length; j++) {
            if (apList[batchEditApInfoShowIndex].ifaces[j].band == 0) {
                //无线状态
                var radiosWirelessStatus2 = document.getElementsByName('batch-edit-group-wireless-status-2.4');
                for (var k=0; k<radiosWirelessStatus2.length; k++) {
                    if(apList[batchEditApInfoShowIndex].ifaces[j].enable!=undefined) {
                        if (radiosWirelessStatus2[k].value == apList[batchEditApInfoShowIndex].ifaces[j].enable) {
                            radiosWirelessStatus2[k].checked = true;
                        }
                    }else {
                        radiosWirelessStatus2[k].checked = false;
                    }
                }
                //SSID
                if (apList[batchEditApInfoShowIndex].ifaces[j].ssid != undefined) {
                    document.getElementById('batch-edit-group-ssid-2.4').value = apList[batchEditApInfoShowIndex].ifaces[j].ssid;
                }else {
                    document.getElementById('batch-edit-group-ssid-2.4').value = '';
                }
               /* //无线内部网络隔离
                var radiosWirelessIsolation2 = document.getElementsByName('batch-edit-group-wireless-isolation-2.4');
                for (var c=0; c<radiosWirelessIsolation2.length; c++) {
                    if (apList[batchEditApInfoShowIndex].ifaces[j].isolation!=undefined) {
                        if (radiosWirelessIsolation2[c].value == apList[batchEditApInfoShowIndex].ifaces[j].isolation) {
                            radiosWirelessIsolation2[c].checked = true;
                        }
                    }else {
                        radiosWirelessIsolation2[c].checked = false;
                    }
                }
                //隐藏无线网络
                var WirelessHide2 = document.getElementsByName('batch-edit-group-wireless-hide-2.4');
                for (var k=0; k<WirelessHide2.length; k++) {
                    if (apList[batchEditApInfoShowIndex].ifaces[j].hide!=undefined) {
                        if (WirelessHide2[k].value == apList[batchEditApInfoShowIndex].ifaces[j].hide) {
                            WirelessHide2[k].checked = true;
                        }
                    }else {
                        WirelessHide2[k].checked = false;
                    }
                }*/
                //安全选项
                var apInfoPublicEncryptionSelect = document.getElementById('batch-edit-group-info-public-encryption-2.4');
                for (var k=0; k<apInfoPublicEncryptionSelect.options.length; k++) {
                    if (apList[batchEditApInfoShowIndex].ifaces[j].encryption!=undefined) {
                        if (apInfoPublicEncryptionSelect[k].value == apList[batchEditApInfoShowIndex].ifaces[j].encryption) {
                            apInfoPublicEncryptionSelect.selectedIndex = k;
                            changeEncryption('batch-edit-group-info-public-encryption-2.4');
                        }
                    }else {
                        apInfoPublicEncryptionSelect.selectedIndex = 0;
                        changeEncryption('batch-edit-group-info-public-encryption-2.4');
                    }
                }
                //无线密码
                if (apList[batchEditApInfoShowIndex].ifaces[j].password != undefined) {
                    document.getElementById('batch-edit-group-2.4-password').value = apList[batchEditApInfoShowIndex].ifaces[j].password;
                }else {
                    document.getElementById('batch-edit-group-2.4-password').value = '';
                }
                //need
                var table = document.getElementById('batch-edit-group-ap-info-24G');
                var channel = table.querySelector('.channel');
                if (apList[batchEditApInfoShowIndex].ifaces[j].channel != undefined) {
                    for (var k=0; k<channel.options.length; k++) {
                        if (channel[k].value == apList[batchEditApInfoShowIndex].ifaces[j].channel) {
                            channel.selectedIndex = k;
                            break;
                        }
                    }
                }else {
                    channel.selectedIndex = 0;
                }
                var bandwidth = table.querySelector('.bandwidth');
                if (apList[batchEditApInfoShowIndex].ifaces[j].bandwidth != undefined) {
                    for (var k=0; k<bandwidth.options.length; k++) {
                        if (bandwidth[k].value == apList[batchEditApInfoShowIndex].ifaces[j].bandwidth) {
                            bandwidth.selectedIndex = k;
                            break;
                        }
                    }
                }else {
                    bandwidth.selectedIndex = 0;
                }
                if (apList[batchEditApInfoShowIndex].ifaces[j].hide!=undefined && apList[batchEditApInfoShowIndex].ifaces[j].hide=='1'){
                    table.querySelector('.hideSSID').checked = false;
                }else{
                    table.querySelector('.hideSSID').checked = true;
                }
                var table5g = document.getElementById('batch-edit-group-ap-info-5G');
                var channelDual24g = table5g.querySelector('.channel');
                channelDual24g.selectedIndex = channel.selectedIndex;
                var bandwidthDual24g = table5g.querySelector('.bandwidth');
                bandwidthDual24g.selectedIndex = bandwidth.selectedIndex;
                /*//带宽控制
                var bandWidthLimit = document.getElementsByName('batch-edit-group-band-width-limit-2.4');
                for (var e=0; e<bandWidthLimit.length; e++) {
                    if(apList[batchEditApInfoShowIndex].ifaces[j].band_width_limit.enable!=undefined) {
                        if (bandWidthLimit[e].value == apList[batchEditApInfoShowIndex].ifaces[j].band_width_limit.enable) {
                            bandWidthLimit[e].checked = true;
                            enableBandWidthLimit('batch-info-2.4G');
                        }
                    }else {
                        bandWidthLimit[e].checked = false;
                        enableBandWidthLimit('batch-info-2.4G');
                    }
                }
                //上传限制
                if (apList[batchEditApInfoShowIndex].ifaces[j].band_width_limit.upload != undefined) {
                    document.getElementById('batch-edit-group-upload-2.4').value = apList[batchEditApInfoShowIndex].ifaces[j].band_width_limit.upload;
                }else {
                    document.getElementById('batch-edit-group-upload-2.4').value = '';
                }
                //下载限制
                if (apList[batchEditApInfoShowIndex].ifaces[j].band_width_limit.download != undefined) {
                    document.getElementById('batch-edit-group-download-2.4').value = apList[batchEditApInfoShowIndex].ifaces[j].band_width_limit.download;
                }else {
                    document.getElementById('batch-edit-group-download-2.4').value = '';
                }*/

                var publicTable = document.getElementById('batch-edit-group-ap-info-public-kick');
                if (apList[batchEditApInfoShowIndex].ifaces[j].enable_prevent!=undefined){
                    if(apList[batchEditApInfoShowIndex].ifaces[j].enable_prevent=='1'){
                        publicTable.querySelector('.enable_prevent').checked = true;
                        publicTable.querySelector('.sta_min_dbm').disabled = false;
                        publicTable.querySelector('.sta_min_dbm').style.color = 'black';
                    }else{
                        publicTable.querySelector('.enable_prevent').checked = false;
                        publicTable.querySelector('.sta_min_dbm').disabled = true;
                        publicTable.querySelector('.sta_min_dbm').style.color = 'gray';
                    }
                }
                if (apList[batchEditApInfoShowIndex].ifaces[j].sta_min_dbm!=undefined){
                    publicTable.querySelector('.sta_min_dbm').value = apList[batchEditApInfoShowIndex].ifaces[j].sta_min_dbm;
                }
                if (apList[batchEditApInfoShowIndex].ifaces[j].enable_kick!=undefined){
                    if(apList[batchEditApInfoShowIndex].ifaces[j].enable_kick=='1'){
                        publicTable.querySelector('.enable_kick').checked = true;
                        publicTable.querySelector('.weak_sta_signal').disabled = false;
                        publicTable.querySelector('.weak_sta_signal').style.color = 'black';
                    }else{
                        publicTable.querySelector('.enable_kick').checked = false;
                        publicTable.querySelector('.weak_sta_signal').disabled = true;
                        publicTable.querySelector('.weak_sta_signal').style.color = 'gray';
                    }
                }
                if (apList[batchEditApInfoShowIndex].ifaces[j].weak_sta_signal!=undefined){
                    publicTable.querySelector('.weak_sta_signal').value = apList[batchEditApInfoShowIndex].ifaces[j].weak_sta_signal;
                }

            } else {
                //无线状态
                var radiosWirelessStatus5 = document.getElementsByName('batch-edit-group-wireless-status-5');
                for (var k=0; k<radiosWirelessStatus5.length; k++) {
                    if (apList[batchEditApInfoShowIndex].ifaces[j].enable!=undefined) {
                        if (radiosWirelessStatus5[k].value == apList[batchEditApInfoShowIndex].ifaces[j].enable) {
                            radiosWirelessStatus5[k].checked = true;
                        }
                    }else {
                        radiosWirelessStatus5[k].checked = false;
                    }
                }
                //SSID
                if (apList[batchEditApInfoShowIndex].ifaces[j].ssid != undefined) {
                    document.getElementById('batch-edit-group-ssid-5').value = apList[batchEditApInfoShowIndex].ifaces[j].ssid;
                }else {
                    document.getElementById('batch-edit-group-ssid-5').value = '';
                }
               /* //无线内部网络隔离
                var radiosWirelessIsolation5 = document.getElementsByName('batch-edit-group-wireless-isolation-5');
                for (var d=0; d<radiosWirelessIsolation5.length; d++) {
                    if (apList[batchEditApInfoShowIndex].ifaces[j].isolation!=undefined) {
                        if (radiosWirelessIsolation5[d].value == apList[batchEditApInfoShowIndex].ifaces[j].isolation) {
                            radiosWirelessIsolation5[d].checked = true;
                        }
                    }else {
                        radiosWirelessIsolation5[d].checked = false;
                    }
                }
                //隐藏无线网络
                var WirelessHide5 = document.getElementsByName('batch-edit-group-wireless-hide-5');
                for (var b=0; b<WirelessHide5.length; b++) {
                    if (apList[batchEditApInfoShowIndex].ifaces[j].hide!=undefined) {
                        if (WirelessHide5[b].value == apList[batchEditApInfoShowIndex].ifaces[j].hide) {
                            WirelessHide5[b].checked = true;
                        }
                    }else {
                        WirelessHide5[b].checked = false;
                    }
                }*/
                //安全选项
                var apInfoEncryptionSelect5 = document.getElementById('batch-edit-group-encryption-5');
                for (var k=0; k<apInfoEncryptionSelect5.options.length; k++) {
                    if (apList[batchEditApInfoShowIndex].ifaces[j].encryption!=undefined) {
                        if (apInfoEncryptionSelect5[k].value == apList[batchEditApInfoShowIndex].ifaces[j].encryption) {
                            apInfoEncryptionSelect5.selectedIndex = k;
                            changeEncryption('batch-edit-group-encryption-5');
                        }
                    }else {
                        apInfoEncryptionSelect5.selectedIndex = 0;
                        changeEncryption('batch-edit-group-encryption-5');
                    }
                }
                //need
                var table = document.getElementById('batch-edit-group-ap-info-5G');
                var channel = table.querySelector('.channel-5');
                if (apList[batchEditApInfoShowIndex].ifaces[j].channel != undefined) {
                    for (var k=0; k<channel.options.length; k++) {
                        if (channel[k].value == apList[batchEditApInfoShowIndex].ifaces[j].channel) {
                            channel.selectedIndex = k;
                            break;
                        }
                    }
                }else {
                    channel.selectedIndex = 0;
                }
                var bandwidth = table.querySelector('.bandwidth-5');
                if (apList[batchEditApInfoShowIndex].ifaces[j].bandwidth != undefined) {
                    for (var k=0; k<bandwidth.options.length; k++) {
                        if (bandwidth[k].value == apList[batchEditApInfoShowIndex].ifaces[j].bandwidth) {
                            bandwidth.selectedIndex = k;
                            break;
                        }
                    }
                }else {
                    bandwidth.selectedIndex = 2;
                }
                channel165(channel, table.id);
                if (apList[batchEditApInfoShowIndex].ifaces[j].hide!=undefined && apList[batchEditApInfoShowIndex].ifaces[j].hide=='1'){
                    table.querySelector('.hideSSID-5').checked = false;
                }else{
                    table.querySelector('.hideSSID-5').checked = true;
                }

              //带宽限制
                /*var bandWidthLimit = document.getElementsByName('batch-edit-group-band-width-limit-5');
                for (var e=0; e<bandWidthLimit.length; e++) {
                    if (apList[batchEditApInfoShowIndex].ifaces[j].band_width_limit.enable!=undefined) {
                        if (bandWidthLimit[e].value == apList[batchEditApInfoShowIndex].ifaces[j].band_width_limit.enable) {
                            bandWidthLimit[e].checked = true;
                            enableBandWidthLimit('batch-info-5G');
                        }
                    }else {
                        bandWidthLimit[e].checked = false;
                        enableBandWidthLimit('batch-info-5G');
                    }
                }*/
             //无线密码
                if (apList[batchEditApInfoShowIndex].ifaces[j].password != undefined) {
                    document.getElementById('batch-edit-group-5-password').value = apList[batchEditApInfoShowIndex].ifaces[j].password;
                }else {
                    document.getElementById('batch-edit-group-5-password').value = '';
                }
               /* //上传限制
                if (apList[batchEditApInfoShowIndex].ifaces[j].band_width_limit.upload != undefined) {
                    document.getElementById('batch-edit-group-upload-5').value = apList[batchEditApInfoShowIndex].ifaces[j].band_width_limit.upload;
                }else {
                    document.getElementById('batch-edit-group-upload-5').value = '';
                }
                //下载限制
                if (apList[batchEditApInfoShowIndex].ifaces[j].band_width_limit.download != undefined) {
                    document.getElementById('batch-edit-group-download-5').value = apList[batchEditApInfoShowIndex].ifaces[j].band_width_limit.download;
                }else {
                    document.getElementById('batch-edit-group-download-5').value = '';
                }*/

                var publicTable = document.getElementById('batch-edit-group-ap-info-public-kick');
                if (apList[batchEditApInfoShowIndex].ifaces[j].enable_prevent!=undefined){
                    if(apList[batchEditApInfoShowIndex].ifaces[j].enable_prevent=='1'){
                        publicTable.querySelector('.enable_prevent').checked = true;
                        publicTable.querySelector('.sta_min_dbm').disabled = false;
                        publicTable.querySelector('.sta_min_dbm').style.color = 'black';
                    }else{
                        publicTable.querySelector('.enable_prevent').checked = false;
                        publicTable.querySelector('.sta_min_dbm').disabled = true;
                        publicTable.querySelector('.sta_min_dbm').style.color = 'gray';
                    }
                }
                if (apList[batchEditApInfoShowIndex].ifaces[j].sta_min_dbm!=undefined){
                    publicTable.querySelector('.sta_min_dbm').value = apList[batchEditApInfoShowIndex].ifaces[j].sta_min_dbm;
                }
                if (apList[batchEditApInfoShowIndex].ifaces[j].enable_kick!=undefined){
                    if(apList[batchEditApInfoShowIndex].ifaces[j].enable_kick=='1'){
                        publicTable.querySelector('.enable_kick').checked = true;
                        publicTable.querySelector('.weak_sta_signal').disabled = false;
                        publicTable.querySelector('.weak_sta_signal').style.color = 'black';
                    }else{
                        publicTable.querySelector('.enable_kick').checked = false;
                        publicTable.querySelector('.weak_sta_signal').disabled = true;
                        publicTable.querySelector('.weak_sta_signal').style.color = 'gray';
                    }
                }
                if (apList[batchEditApInfoShowIndex].ifaces[j].weak_sta_signal!=undefined){
                    publicTable.querySelector('.weak_sta_signal').value = apList[batchEditApInfoShowIndex].ifaces[j].weak_sta_signal;
                }

            }
        }
        //名称
        if (apList[batchEditApInfoShowIndex].name != undefined) {
            document.getElementById('batch-edit-group-ap-info-public-name').value = apList[batchEditApInfoShowIndex].name;
        }else {
            document.getElementById('batch-edit-group-ap-info-public-name').value = '';
        }
        //AP保活时间
        if (apList[batchEditApInfoShowIndex].ap_alive_time != undefined) {
            document.getElementById('batch-edit-group-alive-time').value = apList[batchEditApInfoShowIndex].ap_alive_time;
        }else {
            document.getElementById('batch-edit-group-alive-time').value = '';
        }
       /* //客户端保活时间
        if (apList[batchEditApInfoShowIndex].client_alive_time != undefined) {
            document.getElementById('batch-edit-group-client-alive-time').value = apList[i].client_alive_time;
        }else {
            document.getElementById('batch-edit-group-client-alive-time').value = '';
        }
        //客户端闲置时间
        if (apList[batchEditApInfoShowIndex].client_idle_time !=undefined){
            document.getElementById("batch-edit-group-client-idle-time").value = apList[i].client_idle_time
        }else {
            document.getElementById("batch-edit-group-client-idle-time").value = '';
        }*/
        //LED
        var radios = document.getElementsByName('batch-edit-group-led-enable');
        for (var j=0; j<radios.length; j++) {
            if (apList[batchEditApInfoShowIndex].led!=undefined) {
                if (radios[j].value == apList[batchEditApInfoShowIndex].led) {
                    radios[j].checked = true;
                }
            }else {
                radios[j].checked = false;get_ap_list
            }
        }
        console.log(batchEditApInfoShowIndex);
    }

    function setBatchEditGruopInfo() {
        console.log(batchEditApInfoShowIndex);
        console.log(apList);
        console.log(apList[batchEditApInfoShowIndex]);
        console.log('in');
        var err = document.getElementById('Error');
        var text = err.getElementsByTagName('span')[0];
        var batchListInfoToSet = apList[batchEditApInfoShowIndex];
        var mac = [];
        /*var mac_edit = apList[batchEditApInfoShowIndex].mac;
        mac.push(mac_edit);*/
        for (var i = 0; i < apList.length; i++) {
            console.log("in");
            console.log(apList[i].mac);
            if (document.getElementById('ap-cb-' + i).checked) {
                mac.push(apList[i].mac)
            }
        }
        var ap_group_index = apInfoGroupIndex;
        var ap_alive_time = document.getElementById('batch-edit-group-alive-time').value;
        /*
        var client_alive_time = document.getElementById('batch-edit-group-client-alive-time').value;
        var client_idle_time = document.getElementById('batch-edit-group-client-idle-time').value;
         */
        var name = document.getElementById('batch-edit-group-ap-info-public-name').value;
        var radios = document.getElementsByName('batch-edit-group-led-enable');
        var led;
        for (var i=0; i<radios.length; i++) {
            if (radios[i].checked) {
               led = radios[i].value;
            }
        }
        for (var i=0; i<batchListInfoToSet.ifaces.length; i++) {
            if (batchListInfoToSet.ifaces[i].band == 0 && dualEnable == 0) {
                var radios;
                radios = document.getElementsByName('batch-edit-group-wireless-status-2.4');
                for (var j=0; j<radios.length; j++) {
                    if (radios[j].checked) {
                        batchListInfoToSet.ifaces[i].enable = radios[j].value;
                    }
                }
                batchListInfoToSet.ifaces[i].ssid = document.getElementById('batch-edit-group-ssid-2.4').value;

                /*radios = document.getElementsByName('batch-edit-group-wireless-isolation-2.4');
                for (var j=0; j<radios.length; j++) {
                    if (radios[j].checked) {
                        batchListInfoToSet.ifaces[i].isolation = radios[j].value;
                    }
                }
                radios = document.getElementsByName('batch-edit-group-wireless-hide-2.4');
                for (var j=0; j<radios.length; j++) {
                    if (radios[j].checked) {
                        batchListInfoToSet.ifaces[i].hide = radios[j].value;
                    }
                }*/
                var encryptionSelect = document.getElementById('batch-edit-group-info-public-encryption-2.4');
                batchListInfoToSet.ifaces[i].encryption = encryptionSelect[encryptionSelect.selectedIndex].value;
                if (encryptionSelect[encryptionSelect.selectedIndex].value != 'open') {
                    batchListInfoToSet.ifaces[i].password = document.getElementById('batch-edit-group-2.4-password').value;
                }else {
                    batchListInfoToSet.ifaces[i].password = '';
                }
                var table = document.getElementById('batch-edit-group-ap-info-24G');
                var channel = table.querySelector('.channel');
                batchListInfoToSet.ifaces[i].channel = channel[channel.selectedIndex].value;
                var bandwidth = table.querySelector('.bandwidth');
                batchListInfoToSet.ifaces[i].bandwidth = bandwidth[bandwidth.selectedIndex].value;
                batchListInfoToSet.ifaces[i].hide = table.querySelector('.hideSSID').checked?'0':'1';

                var apGroupInfoSelect = document.getElementById('batch-edit-group-info-select');
                apGroupInfoSelect.selectedIndex = 0;
                if (batchListInfoToSet.ifaces[i].ssid==null||batchListInfoToSet.ifaces[i].ssid==''){
                    changebatchInfo();
                    text.innerText = '<%:Please input 2.4g network SSID!%>';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('batch-edit-group-ssid-2.4');
                    return;
                }else if (strlen(batchListInfoToSet.ifaces[i].ssid)>32){
                    changebatchInfo();
					text.innerText = "<%:The SSID character length cannot be more than 32 bits!%>";
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('batch-edit-group-ssid-2.4');
                    return;
                }
                if (batchListInfoToSet.ifaces[i].encryption!='open'){
                    if (batchListInfoToSet.ifaces[i].password.length<8){
                        changebatchInfo();
                        text.innerText = '<%:The password length is no less than 8 bits!%>';
                        err.style.visibility = 'visible';
                        errTipDoc = document.getElementById('batch-edit-group-2.4-password');
                        return;
                    }
                    if (batchListInfoToSet.ifaces[i].password != check(batchListInfoToSet.ifaces[i].password)){
                        changebatchInfo();
                        text.innerText = '<%:password contain invalid character%>';
                        err.style.visibility = 'visible';
                        errTipDoc = document.getElementById('batch-edit-group-2.4-password');
                        return;
                    }
                }

                var publicTable = document.getElementById('batch-edit-group-ap-info-public-kick');
                batchListInfoToSet.ifaces[i].enable_prevent = publicTable.querySelector('.enable_prevent').checked?'1':'0';
                batchListInfoToSet.ifaces[i].sta_min_dbm = publicTable.querySelector('.sta_min_dbm').value;
                batchListInfoToSet.ifaces[i].enable_kick = publicTable.querySelector('.enable_kick').checked?'1':'0';
                batchListInfoToSet.ifaces[i].weak_sta_signal = publicTable.querySelector('.weak_sta_signal').value;
                if(checkKick(batchListInfoToSet.ifaces[i],publicTable)){
                    return;
                }

            } else if(batchListInfoToSet.ifaces[i].band == 1){
                var radios;
                radios = document.getElementsByName('batch-edit-group-wireless-status-5');
                for (var j=0; j<radios.length; j++) {
                    if (radios[j].checked) {
                        batchListInfoToSet.ifaces[i].enable = radios[j].value;
                    }
                }
                batchListInfoToSet.ifaces[i].ssid = document.getElementById('batch-edit-group-ssid-5').value;
                /*radios = document.getElementsByName('batch-edit-group-wireless-isolation-5');
                for (var j=0; j<radios.length; j++) {
                    if (radios[j].checked) {
                        batchListInfoToSet.ifaces[i].isolation = radios[j].value;
                    }
                }
                radios = document.getElementsByName('batch-edit-group-wireless-hide-5');
                for (var j=0; j<radios.length; j++) {
                    if (radios[j].checked) {
                        batchListInfoToSet.ifaces[i].hide = radios[j].value;
                    }
                }*/
                var encryptionSelect = document.getElementById('batch-edit-group-encryption-5');
                batchListInfoToSet.ifaces[i].encryption = encryptionSelect[encryptionSelect.selectedIndex].value;
                if (encryptionSelect[encryptionSelect.selectedIndex].value != 'open') {
                    batchListInfoToSet.ifaces[i].password = document.getElementById('batch-edit-group-5-password').value;
                }else {
                    batchListInfoToSet.ifaces[i].password = '';
                }
                var table = document.getElementById('batch-edit-group-ap-info-5G');
                var channel = table.querySelector('.channel-5');
                batchListInfoToSet.ifaces[i].channel = channel[channel.selectedIndex].value;
                var bandwidth = table.querySelector('.bandwidth-5');
                batchListInfoToSet.ifaces[i].bandwidth = bandwidth[bandwidth.selectedIndex].value;
                batchListInfoToSet.ifaces[i].hide = table.querySelector('.hideSSID-5').checked?'0':'1';
                /*radios = document.getElementsByName('batch-edit-group-band-width-limit-5');
                for (var j=0; j<radios.length; j++) {
                    if (radios[j].checked) {
                        batchListInfoToSet.ifaces[i].band_width_limit.enable = radios[j].value;
                        if (radios[j].value == 1) {
                            batchListInfoToSet.ifaces[i].band_width_limit.upload = document.getElementById('batch-edit-group-upload-5').value;
                            batchListInfoToSet.ifaces[i].band_width_limit.download = document.getElementById('batch-edit-group-download-5').value;
                        }else {
                            batchListInfoToSet.ifaces[i].band_width_limit.upload = '';
                            batchListInfoToSet.ifaces[i].band_width_limit.download = '';

                        }
                    }
                }*/

                var apGroupInfoSelect = document.getElementById('batch-edit-group-info-select');
                apGroupInfoSelect.selectedIndex = 1;
                if (batchListInfoToSet.ifaces[i].ssid==null||batchListInfoToSet.ifaces[i].ssid==''){
                    changebatchInfo();
                    text.innerText = '<%:Please input 5g network SSID!%>';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('batch-edit-group-ssid-5');
                    return;
                }else if (strlen(batchListInfoToSet.ifaces[i].ssid)>32){
                    changebatchInfo();
                    text.innerText = '<%:The SSID character length cannot be more than 32 bits!%>';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('batch-edit-group-ssid-5');
                    return;
                }
                if (batchListInfoToSet.ifaces[i].encryption!='open'){
                    if (batchListInfoToSet.ifaces[i].password.length<8){
                        changebatchInfo();
                        text.innerText = '<%:The password length is no less than 8 bits!%>';
                        err.style.visibility = 'visible';
                        return;
                    }
                    if (batchListInfoToSet.ifaces[i].password != check(batchListInfoToSet.ifaces[i].password)){
                        changebatchInfo();
                        text.innerText = '<%:password contain invalid character%>';
                        err.style.visibility = 'visible';
                        errTipDoc = document.getElementById('batch-edit-group-5-password');
                        return;
                    }
                }

                var publicTable = document.getElementById('batch-edit-group-ap-info-public-kick');
                batchListInfoToSet.ifaces[i].enable_prevent = publicTable.querySelector('.enable_prevent').checked?'1':'0';
                batchListInfoToSet.ifaces[i].sta_min_dbm = publicTable.querySelector('.sta_min_dbm').value;
                batchListInfoToSet.ifaces[i].enable_kick = publicTable.querySelector('.enable_kick').checked?'1':'0';
                batchListInfoToSet.ifaces[i].weak_sta_signal = publicTable.querySelector('.weak_sta_signal').value;
                if(checkKick(batchListInfoToSet.ifaces[i],publicTable)){
                    return;
                }

                if(dualEnable == 1){
                    for (var j=0; j<batchListInfoToSet.ifaces.length; j++) {
                        if (batchListInfoToSet.ifaces[j].band == 0) {
                            $.extend(batchListInfoToSet.ifaces[j],batchListInfoToSet.ifaces[i]);
                            batchListInfoToSet.ifaces[j].band = 0;
                            var channel = table.querySelector('.channel');
                            batchListInfoToSet.ifaces[j].channel = channel[channel.selectedIndex].value;
                            var bandwidth = table.querySelector('.bandwidth');
                            batchListInfoToSet.ifaces[j].bandwidth = bandwidth[bandwidth.selectedIndex].value;
                        }
                    }
                }
            }
        }
        if (name==null||name==''){
            text.innerText = '<%:Please input AP name!%>';
            err.style.visibility = 'visible';
            errTipDoc = document.getElementById('batch-edit-group-ap-info-public-name');
            return;
        } else if (strlen(name)>45) {
            text.innerText = '<%:The AP name cannot be more than 45 characters!%>！';
            err.style.visibility = 'visible';
            errTipDoc = document.getElementById('batch-edit-group-ap-info-public-name');
            return;
        }
        if (ap_alive_time<20||ap_alive_time>80||ap_alive_time.search(/\D/g) != -1){
            text.innerText = '<%:The ap_alive_time limit is 20-80 seconds!%>';
            err.style.visibility = 'visible';
            errTipDoc = document.getElementById('batch-edit-group-alive-time');
            return;
        }

        var params = {'macs':mac, 'led':led, 'ifaces':batchListInfoToSet.ifaces,'name':name,
            'ap_alive_time':ap_alive_time};
        console.log(params);
        document.getElementById('setBatchEditBtn').disabled = true;
        document.getElementById("waiting").style.display = '';
        XHR.post('<%=luci.dispatcher.build_url("admin", "ap","set_ap")%>', params,
            function(x, result) {
            console.log(result);
                document.getElementById('setBatchEditBtn').disabled = false;
                showGroupInfo(apInfoGroupIndex);
                document.getElementById('changeGroup').disabled = true;
                document.getElementById('batchGroup').disabled = true;
                document.getElementById('delGroup').disabled = true;
                if (result==null) {
                    var err = document.getElementById('Error');
                    var text = err.getElementsByTagName('span')[0];
                    text.innerText = "<%:router connection failure%>";
                    err.style.visibility = 'visible';
                    document.getElementById("waiting").style.display = 'none';
                }else if(result.code == 0) {
                    setTimeout(function(){
                        showGroupInfo(apInfoGroupIndex);
                        document.getElementById("waiting").style.display = 'none';
                        document.getElementById('batch-edit-group').style.display = 'none';
                        document.getElementById('group-info').style.display = '';
                        var err = document.getElementById('Error');
                        var text = err.getElementsByTagName('span')[0];
                        text.innerText = '<%:modified%>';
                        err.style.visibility = 'visible';
                        },2000);
                }else {
                    var err = document.getElementById('Error');
                    var text = err.getElementsByTagName('span')[0];
                    text.innerText = result.msg;
                    err.style.visibility = 'visible';
                    document.getElementById("waiting").style.display = 'none';
                }
            });
    }

function showGroupSelect() {
    var apGroupsSelect = document.getElementById('ap-groups-select');
    var apGroupName;
    for (var i = 0; i < apGroups.length; i++) {
        if (apGroups[i].index == apInfoGroupIndex) {
            apGroupName = apGroups[i].name;
        }
    }
    var options = apGroupsSelect.options;
    var optLen = options.length;
    for(var i=0; i<optLen ; i++){//delete all options
        apGroupsSelect.removeChild(options[0]);
    }
    for (var i=0; i<apGroups.length; i++) {
        apGroupsSelect.options[i] = new Option(apGroups[i].name,apGroups[i].name);
    }
    for (var i = 0; i < apGroupsSelect.length; i++) {
        if (apGroupsSelect[i].value == apGroupName) {
            apGroupsSelect.remove(i);
        }
    }

    showParts(['ap-groups-modify']);
}

function changeApGroup() {
    document.getElementById("waiting").style.display = '';
    var macs = [];
    for (var i = 0; i < apList.length; i++) {
        if (document.getElementById('ap-cb-' + i).checked) {
            macs.push(apList[i].mac)
        }
    }
    var apGroupsSelect = document.getElementById('ap-groups-select');
    var apGroupName = apGroupsSelect[apGroupsSelect.selectedIndex].value;
    for (var i = 0; i < apGroups.length; i++) {
        if (apGroups[i].name == apGroupName) {
            var ap_group_index = apGroups[i].index;
        }
    }
//        var ap_group_index = apInfoGroupIndex;
    var params = {'macs': macs, 'ap_group_index': ap_group_index};
    console.log(params);
    XHR.post('<%=luci.dispatcher.build_url("admin", "ap","set_ap")%>', params,
        function (x, result) {
            showGroupInfo(apInfoGroupIndex);
            document.getElementById('changeGroup').disabled = true;
            document.getElementById('batchGroup').disabled = true;
            document.getElementById('delGroup').disabled = true;
            if (result==null){
                var err = document.getElementById('Error');
                var text = err.getElementsByTagName('span')[0];
                text.innerText = "<%:router connection failure%>";
                err.style.visibility = 'visible';
                document.getElementById("waiting").style.display = 'none';
            }else if (result.code == 0) {
                setTimeout(function(){
                    document.getElementById("waiting").style.display = 'none';
                    document.getElementById('ap-groups-modify').style.display = 'none';
                    var err = document.getElementById('Error');
                    var text = err.getElementsByTagName('span')[0];
                    text.innerText = '<%:modified%>';
                    err.style.visibility = 'visible';
                    showGroupInfo(apInfoGroupIndex);
                    },2000);
            }else {
                var err = document.getElementById('Error');
                var text = err.getElementsByTagName('span')[0];
                text.innerText = result.msg;
                err.style.visibility = 'visible';
                document.getElementById("waiting").style.display = 'none';
            }
        });
}

    function delBatch() {
        var macs = [];
        for (var i = 0; i < apList.length; i++) {
            console.log("in");
            console.log(apList[i].mac);
            if (document.getElementById('ap-cb-' + i).checked) {
                macs.push(apList[i].mac)
            }
        }
        if(macs == undefined){
            return;
        }
        var params = {"macs":macs};
        console.log(params);
        XHR.post('<%=luci.dispatcher.build_url("admin", "ap","delete_ap")%>', params,
            function(x, result) {
                if (result==null){
                    var err = document.getElementById('Error');
                    var text = err.getElementsByTagName('span')[0];
                    text.innerText = "<%:router connection failure%>";
                    err.style.visibility = 'visible';
                }else if(result.code == 0) {
                    var err = document.getElementById('Error');
                    var text = err.getElementsByTagName('span')[0];
                    text.innerText = '<%:deleted%>';
                    err.style.visibility = 'visible';
                    location.reload();
                }else {
                    var err = document.getElementById('Error');
                    var text = err.getElementsByTagName('span')[0];
                    text.innerText = result.msg;
                    err.style.visibility = 'visible';
                }
            });
    }

    function choseAll() {
        var mainControl = document.getElementById("mainController");
        for (var i = 0; i < apList.length;i++){
            var singleControl = document.getElementById('ap-cb-' + i)
            if (mainControl.checked == true){
                singleControl.checked = true;
                document.getElementById('changeGroup').disabled = false;
                document.getElementById('batchGroup').disabled = false;
                document.getElementById('delGroup').disabled = false;
            }else{
                singleControl.checked = false;
                document.getElementById('changeGroup').disabled = true;
                document.getElementById('batchGroup').disabled = true;
                document.getElementById('delGroup').disabled = true;
            }

        }
    }

    function chooseAllOrNot() {
        if (document.getElementById('choose-all-or-not').checked) {
            for (var i=0; i<apGroups.length; i++) {
                if (i == 0) continue;
                document.getElementById('cb-'+(i+1)).checked = true;
            }
            document.getElementById('groupDel').disabled = false;
        } else {
            for (var i=0; i<apGroups.length; i++) {
                if (i == 0) continue;
                document.getElementById('cb-'+(i+1)).checked = false;
            }
            document.getElementById('groupDel').disabled = true;
        }
    }

    function apGoupDelChange(e,x) {
        if (x==1){
            if (e.checked){
                document.getElementById('groupDel').disabled = false;
                return;
            }
            for (var i in apGroups){
                var index = parseInt(i)+1;
                var id = 'cb-'+index;
                var group = document.getElementById(id);
                if (group.checked){
                    document.getElementById('groupDel').disabled = false;
                    return;
                }
            }
            document.getElementById('groupDel').disabled = true;
        } else {
            if (e.checked){
                document.getElementById('changeGroup').disabled = false;
                document.getElementById('batchGroup').disabled = false;
                document.getElementById('delGroup').disabled = false;
                return;
            }
            for (var i in apList){
                var id = 'ap-cb-'+i;
                var ap = document.getElementById(id);
                if (ap.checked){
                    document.getElementById('changeGroup').disabled = false;
                    document.getElementById('batchGroup').disabled = false;
                    document.getElementById('delGroup').disabled = false;
                    return;
                }
            }
            document.getElementById('changeGroup').disabled = true;
            document.getElementById('batchGroup').disabled = true;
            document.getElementById('delGroup').disabled = true;
        }

    }

    function isNextPage() {
        isRealNextPage = true;
    }

    function getDual() {
        XHR.post('<%=luci.dispatcher.build_url("admin", "ap","get_ap_freq_inter")%>', null,
                function (x, result) {
                    console.log(result);
                    if (result==null) {
                        var err = document.getElementById('Error');
                        var text = err.getElementsByTagName('span')[0];
                        err.style.visibility = 'visible';
                        text.innerText = '<%:router connection failure%>';
                    }else if (result!=null||result.code==0){
                        console.log(dualEnable,result.enable);
                        if(result.enable == 1){
                            switchDualChecked(true);
                        }else{
                            switchDualChecked(false);
                        }
                    }else {
                        var err = document.getElementById('Error');
                        var text = err.getElementsByTagName('span')[0];
                        text.innerText = result.msg;
                        err.style.visibility = 'visible';
                    }
                });
    }
    function switchEnableDual(divId){
        setTimeout(function(){
            document.getElementById(divId).onclick = function(){
                switchDualChange();
            };
        },100);
    }
    function switchDisable(divId){
        document.getElementById(divId).onclick = function(){
            ;
        };
    }
    function switchDualChange() {
        var editGroupDiv = document.getElementById('edit-group').style.display;
        var newGroupDiv = document.getElementById('new-group').style.display;
        var apInfosDiv = document.getElementById("ap-infos").style.display;
        var batchEditGroupDiv = document.getElementById("batch-edit-group").style.display;
        if (newGroupDiv != 'none'){
            closeNewGroup();
        }
        if (editGroupDiv != 'none'){
            closeEditGroup();
        }
        if (apInfosDiv != 'none'){
            hideParts(['ap-infos']);
        }
        if(batchEditGroupDiv != 'none'){
            hideParts(['batch-edit-group']);
        }
        document.getElementById("waiting").style.display = '';
        var status = document.getElementById("switchDualSpan").innerHTML;
        var flag = true;
        switchDisable('switchDualCon');
        if (status=="<%:enabled%>") {
            flag = false;
        }
        switchDualChecked(flag);
        if (checkDualStatus()) {
            var enable = 1;
        } else {
            var enable = 0;
        }
        var params;
        params = {'enable':enable};
        console.log("params",params);
        XHR.post('<%=luci.dispatcher.build_url("admin", "ap","set_ap_freq_inter")%>', params,
                function (x, result) {
                    console.log(result);
                    if (result==null) {
                        var err = document.getElementById('Error');
                        var text = err.getElementsByTagName('span')[0];
                        err.style.visibility = 'visible';
                        text.innerText = '<%:router connection failure%>';
                        document.getElementById("waiting").style.display = 'none';
                        switchEnableDual('switchDualCon');
                    }else if (result!=null||result.code==0){
                        setTimeout(function (){
                            if (apInfoGroupIndex){
                                showGroupInfo(0);
                            }
                            getApGroups();
                            document.getElementById("waiting").style.display = 'none';
                            switchEnableDual('switchDualCon');
                        },15000);
                    }else {
                        var err = document.getElementById('Error');
                        var text = err.getElementsByTagName('span')[0];
                        text.innerText = result.msg;
                        err.style.visibility = 'visible';
                        document.getElementById("waiting").style.display = 'none';
                        switchEnableDual('switchDualCon');
                    }
                });
    }
	function switchDualChecked(flag) {
	    if (flag) {
            dualEnable = 1;
            document.getElementById("switchDualSpan").innerText = '<%:enabled%>';
            document.getElementById("switchDualSpan").className = "bWlSwitchOff spanSwitchOn";
	        document.getElementById("switchDualOn").style.display = "";
	        document.getElementById("switchDualOff").style.display = "none"
	    } else {
            dualEnable = 0;
	        document.getElementById("switchDualSpan").innerText = '<%:disabled%>';
            document.getElementById("switchDualSpan").className = "bWlSwitchOff";
	        document.getElementById("switchDualOn").style.display = "none";
	        document.getElementById("switchDualOff").style.display = "";
	    }
        dualDisplay(flag);
	}
    function checkDualStatus() {
        var status = document.getElementById("switchDualSpan").innerText;
        if (status == '<%:enabled%>') {
            return 1;
        } else {
            return 0;
        }
    }
	function dualDisplay(flag) {
	    if (flag) {
/*
	        document.getElementById("ownerRadioSelect").style.display = "none"
	        document.getElementById("2.4G").style.display = "none"
	        document.getElementById("5G").style.display = "none"
	        document.getElementById("dual-table").style.display = "";
*/

            var dualHideTr = document.querySelectorAll(".dualHide");
            for(var i=0; i<dualHideTr.length; i++){
                dualHideTr[i].style.display = 'none';
            }

            var dualShowTr = document.querySelectorAll(".dualShow");
            for(var i=0; i<dualShowTr.length; i++){
                dualShowTr[i].style.display = '';
            }

            var channelTextTd24g = document.querySelectorAll(".channelText24g");
            for(var i=0; i<channelTextTd24g.length; i++){
                channelTextTd24g[i].innerText = '2.4G<%:channel%>';
            }

            var channelTextTd5g = document.querySelectorAll(".channelText5g");
            for(var i=0; i<channelTextTd5g.length; i++){
                channelTextTd5g[i].innerText = '5G<%:channel%>';
            }

            var bandwidthTextTd24g = document.querySelectorAll(".bandwidthText24g");
            for(var i=0; i<bandwidthTextTd24g.length; i++){
                bandwidthTextTd24g[i].innerText = '2.4G<%:Spectrum bandwidth%>';
            }

            var bandwidthTextTd5g = document.querySelectorAll(".bandwidthText5g");
            for(var i=0; i<bandwidthTextTd5g.length; i++){
                bandwidthTextTd5g[i].innerText = '5G<%:Spectrum bandwidth%>';
            }

            document.getElementById("switchDualSpan").innerText = '<%:enabled%>';
	        document.getElementById("switchDualOn").style.display = "";
            document.getElementById("switchDualOff").style.display = "none"
	    } else {
/*
	        document.getElementById("ownerRadioSelect").style.display = "";
	        document.getElementById("dual-table").style.display = "none";
            wirelessSel('ownerType');
*/
            var dualHideTr = document.querySelectorAll(".dualHide");
            for(var i=0; i<dualHideTr.length; i++){
                dualHideTr[i].style.display = '';
            }

            var dualShowTr = document.querySelectorAll(".dualShow");
            for(var i=0; i<dualShowTr.length; i++){
                dualShowTr[i].style.display = 'none';
            }

            var channelTextTd24g = document.querySelectorAll(".channelText24g");
            for(var i=0; i<channelTextTd24g.length; i++){
                channelTextTd24g[i].innerText = '<%:channel%>';
            }

            var channelTextTd5g = document.querySelectorAll(".channelText5g");
            for(var i=0; i<channelTextTd5g.length; i++){
                channelTextTd5g[i].innerText = '<%:channel%>';
            }

            var bandwidthTextTd24g = document.querySelectorAll(".bandwidthText24g");
            for(var i=0; i<bandwidthTextTd24g.length; i++){
                bandwidthTextTd24g[i].innerText = '<%:Spectrum bandwidth%>';
            }

            var bandwidthTextTd5g = document.querySelectorAll(".bandwidthText5g");
            for(var i=0; i<bandwidthTextTd5g.length; i++){
                bandwidthTextTd5g[i].innerText = '<%:Spectrum bandwidth%>';
            }

	        document.getElementById("switchDualSpan").innerText = '<%:disabled%>';
	        document.getElementById("switchDualOn").style.display = "none";
	        document.getElementById("switchDualOff").style.display = "";
	    }
	}

    function changeStatus(e,divId,eleClass) {
        if(divId == 'edit-group'||divId == 'new-group'){
            var table = document.querySelector("#"+divId+" table");
        }else{
            var table = document.querySelector("#"+divId);
        }
        var ele = table.querySelector("."+eleClass);
        if (e.checked){
            ele.disabled = '';
            ele.style.color = 'black';
            if(eleClass == "sta_min_dbm"||eleClass == "sta_min_dbm-5"){
                ele.value = '-70';
            }else {
                ele.value = '-75';
            }
        }else {
            ele.disabled = 'disabled';
            ele.style.color = 'gray';
            if(eleClass == "sta_min_dbm"||eleClass == "sta_min_dbm-5"){
                ele.value = '-70';
            }else {
                ele.value = '-75';
            }
        }
    }

    function checkKick(ifaces,table) {
        var err = document.getElementById('Error');
        var text = err.getElementsByTagName('span')[0];
        if(ifaces.enable_prevent=="1"){
            if (ifaces.sta_min_dbm==null||ifaces.sta_min_dbm==""){
                text.innerText = '<%:The signal strength must not be empty%>';
                err.style.visibility = 'visible';
                errTipDoc = table.querySelector('.sta_min_dbm');
                return 1;
            }else if (ifaces.sta_min_dbm>(-30)||ifaces.sta_min_dbm<(-90)) {
                text.innerText = '<%:The wireless client access range error%>';
                err.style.visibility = 'visible';
                errTipDoc = table.querySelector('.sta_min_dbm');
                return 1;
            }
        }
        if (ifaces.enable_kick=="1"){
            if (ifaces.weak_sta_signal==null||ifaces.weak_sta_signal==""){
                text.innerText = '<%:The kick signal strength cannot be empty%>';
                err.style.visibility = 'visible';
                errTipDoc = table.querySelector('.weak_sta_signal');
                return 1;
            }else if (ifaces.weak_sta_signal>(-30)||ifaces.weak_sta_signal<(-90)) {
                text.innerText = '<%:The wireless client access range error%>';
                err.style.visibility = 'visible';
                errTipDoc = table.querySelector('.weak_sta_signal');
                return 1;
            }
        }
        if (ifaces.enable_kick=="1"&&ifaces.enable_prevent=="1"){
            var diffValue = ifaces.sta_min_dbm-ifaces.weak_sta_signal;
            if (diffValue < 5 ){
                text.innerText = '<%:Wireless client ban signal strength range error%>';
                err.style.visibility = 'visible';
                return 1;
            }
        }else if(ifaces.enable_kick=="1"&&ifaces.enable_prevent!="1"){
            text.innerText = '<%:wireless client ban signal strength range should be enable%>';
            err.style.visibility = 'visible';
            errTipDoc = table.querySelector('.weak_sta_signal');
            return 1;
        }
        return 0;
    }

    function channel165(channel5g, tableId){
        var table = document.getElementById(tableId);
        var bandwidth5g = table.querySelector('.bandwidth-5');
        if (channel5g[channel5g.selectedIndex].value == '165'){
            bandwidth5g.length = 1;
        } else if (bandwidth5g.length == 1) {
            bandwidth5g.options[1] = new Option('40MHZ','VHT40');
            bandwidth5g.options[2] = new Option('80MHZ','VHT80');
            bandwidth5g.selectedIndex = 2;
        }
    }
</script>
